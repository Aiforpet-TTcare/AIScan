program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "3404.16.1"}, {"coremlc-version", "3404.23.1"}, {"coremltools-component-torch", "2.0.0"}, {"coremltools-source-dialect", "TorchScript"}, {"coremltools-version", "8.3.0"}})]
{
    func main<ios15>(tensor<fp32, [1, 3, 640, 640]> image) {
            tensor<fp32, []> image__scaled___y_0 = const()[name = tensor<string, []>("image__scaled___y_0"), val = tensor<fp32, []>(0x1.010102p-8)];
            tensor<fp32, [1, 3, 640, 640]> image__scaled__ = mul(x = image, y = image__scaled___y_0)[name = tensor<string, []>("image__scaled__")];
            tensor<string, []> input_1_pad_type_0 = const()[name = tensor<string, []>("input_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_1_pad_0 = const()[name = tensor<string, []>("input_1_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_1_strides_0 = const()[name = tensor<string, []>("input_1_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> input_1_dilations_0 = const()[name = tensor<string, []>("input_1_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_1_groups_0 = const()[name = tensor<string, []>("input_1_groups_0"), val = tensor<int32, []>(1)];
            tensor<string, []> image_to_fp16_dtype_0 = const()[name = tensor<string, []>("image_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [32, 3, 3, 3]> model_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_0_conv_weight_to_fp16"), val = tensor<fp16, [32, 3, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [32]> model_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_0_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1856)))];
            tensor<fp16, [1, 3, 640, 640]> image_to_fp16 = cast(dtype = image_to_fp16_dtype_0, x = image__scaled__)[name = tensor<string, []>("cast_16")];
            tensor<fp16, [1, 32, 320, 320]> input_1_cast_fp16 = conv(bias = model_0_conv_bias_to_fp16, dilations = input_1_dilations_0, groups = input_1_groups_0, pad = input_1_pad_0, pad_type = input_1_pad_type_0, strides = input_1_strides_0, weight = model_0_conv_weight_to_fp16, x = image_to_fp16)[name = tensor<string, []>("input_1_cast_fp16")];
            tensor<fp16, [1, 32, 320, 320]> input_3_cast_fp16 = silu(x = input_1_cast_fp16)[name = tensor<string, []>("input_3_cast_fp16")];
            tensor<string, []> input_5_pad_type_0 = const()[name = tensor<string, []>("input_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_5_pad_0 = const()[name = tensor<string, []>("input_5_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_5_strides_0 = const()[name = tensor<string, []>("input_5_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> input_5_dilations_0 = const()[name = tensor<string, []>("input_5_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_5_groups_0 = const()[name = tensor<string, []>("input_5_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 32, 3, 3]> model_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1984)))];
            tensor<fp16, [64]> model_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38912)))];
            tensor<fp16, [1, 64, 160, 160]> input_5_cast_fp16 = conv(bias = model_1_conv_bias_to_fp16, dilations = input_5_dilations_0, groups = input_5_groups_0, pad = input_5_pad_0, pad_type = input_5_pad_type_0, strides = input_5_strides_0, weight = model_1_conv_weight_to_fp16, x = input_3_cast_fp16)[name = tensor<string, []>("input_5_cast_fp16")];
            tensor<fp16, [1, 64, 160, 160]> input_7_cast_fp16 = silu(x = input_5_cast_fp16)[name = tensor<string, []>("input_7_cast_fp16")];
            tensor<int32, []> var_70 = const()[name = tensor<string, []>("op_70"), val = tensor<int32, []>(1)];
            tensor<string, []> input_9_pad_type_0 = const()[name = tensor<string, []>("input_9_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_9_strides_0 = const()[name = tensor<string, []>("input_9_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_9_pad_0 = const()[name = tensor<string, []>("input_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_9_dilations_0 = const()[name = tensor<string, []>("input_9_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_9_groups_0 = const()[name = tensor<string, []>("input_9_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 1, 1]> model_2_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_2_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39104)))];
            tensor<fp16, [64]> model_2_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_2_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47360)))];
            tensor<fp16, [1, 64, 160, 160]> input_9_cast_fp16 = conv(bias = model_2_cv1_conv_bias_to_fp16, dilations = input_9_dilations_0, groups = input_9_groups_0, pad = input_9_pad_0, pad_type = input_9_pad_type_0, strides = input_9_strides_0, weight = model_2_cv1_conv_weight_to_fp16, x = input_7_cast_fp16)[name = tensor<string, []>("input_9_cast_fp16")];
            tensor<fp16, [1, 64, 160, 160]> var_83_cast_fp16 = silu(x = input_9_cast_fp16)[name = tensor<string, []>("op_83_cast_fp16")];
            tensor<int32, [2]> var_84 = const()[name = tensor<string, []>("op_84"), val = tensor<int32, [2]>([32, 32])];
            tensor<int32, []> var_85_axis_0 = const()[name = tensor<string, []>("op_85_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 32, 160, 160]> var_85_cast_fp16_0, tensor<fp16, [1, 32, 160, 160]> var_85_cast_fp16_1 = split(axis = var_85_axis_0, split_sizes = var_84, x = var_83_cast_fp16)[name = tensor<string, []>("op_85_cast_fp16")];
            tensor<string, []> input_13_pad_type_0 = const()[name = tensor<string, []>("input_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_13_pad_0 = const()[name = tensor<string, []>("input_13_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_13_strides_0 = const()[name = tensor<string, []>("input_13_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_13_dilations_0 = const()[name = tensor<string, []>("input_13_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_13_groups_0 = const()[name = tensor<string, []>("input_13_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [16, 32, 3, 3]> model_2_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_2_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [16, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47552)))];
            tensor<fp16, [16]> model_2_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_2_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56832)))];
            tensor<fp16, [1, 16, 160, 160]> input_13_cast_fp16 = conv(bias = model_2_m_0_cv1_conv_bias_to_fp16, dilations = input_13_dilations_0, groups = input_13_groups_0, pad = input_13_pad_0, pad_type = input_13_pad_type_0, strides = input_13_strides_0, weight = model_2_m_0_cv1_conv_weight_to_fp16, x = var_85_cast_fp16_1)[name = tensor<string, []>("input_13_cast_fp16")];
            tensor<fp16, [1, 16, 160, 160]> input_15_cast_fp16 = silu(x = input_13_cast_fp16)[name = tensor<string, []>("input_15_cast_fp16")];
            tensor<string, []> input_17_pad_type_0 = const()[name = tensor<string, []>("input_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_17_pad_0 = const()[name = tensor<string, []>("input_17_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_17_strides_0 = const()[name = tensor<string, []>("input_17_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_17_dilations_0 = const()[name = tensor<string, []>("input_17_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_17_groups_0 = const()[name = tensor<string, []>("input_17_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [32, 16, 3, 3]> model_2_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_2_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [32, 16, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56960)))];
            tensor<fp16, [32]> model_2_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_2_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66240)))];
            tensor<fp16, [1, 32, 160, 160]> input_17_cast_fp16 = conv(bias = model_2_m_0_cv2_conv_bias_to_fp16, dilations = input_17_dilations_0, groups = input_17_groups_0, pad = input_17_pad_0, pad_type = input_17_pad_type_0, strides = input_17_strides_0, weight = model_2_m_0_cv2_conv_weight_to_fp16, x = input_15_cast_fp16)[name = tensor<string, []>("input_17_cast_fp16")];
            tensor<fp16, [1, 32, 160, 160]> var_107_cast_fp16 = silu(x = input_17_cast_fp16)[name = tensor<string, []>("op_107_cast_fp16")];
            tensor<fp16, [1, 32, 160, 160]> var_108_cast_fp16 = add(x = var_85_cast_fp16_1, y = var_107_cast_fp16)[name = tensor<string, []>("op_108_cast_fp16")];
            tensor<bool, []> input_19_interleave_0 = const()[name = tensor<string, []>("input_19_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 96, 160, 160]> input_19_cast_fp16 = concat(axis = var_70, interleave = input_19_interleave_0, values = (var_85_cast_fp16_0, var_85_cast_fp16_1, var_108_cast_fp16))[name = tensor<string, []>("input_19_cast_fp16")];
            tensor<string, []> input_21_pad_type_0 = const()[name = tensor<string, []>("input_21_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_21_strides_0 = const()[name = tensor<string, []>("input_21_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_21_pad_0 = const()[name = tensor<string, []>("input_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_21_dilations_0 = const()[name = tensor<string, []>("input_21_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_21_groups_0 = const()[name = tensor<string, []>("input_21_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 96, 1, 1]> model_2_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_2_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 96, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66368)))];
            tensor<fp16, [128]> model_2_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_2_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(91008)))];
            tensor<fp16, [1, 128, 160, 160]> input_21_cast_fp16 = conv(bias = model_2_cv2_conv_bias_to_fp16, dilations = input_21_dilations_0, groups = input_21_groups_0, pad = input_21_pad_0, pad_type = input_21_pad_type_0, strides = input_21_strides_0, weight = model_2_cv2_conv_weight_to_fp16, x = input_19_cast_fp16)[name = tensor<string, []>("input_21_cast_fp16")];
            tensor<fp16, [1, 128, 160, 160]> input_23_cast_fp16 = silu(x = input_21_cast_fp16)[name = tensor<string, []>("input_23_cast_fp16")];
            tensor<string, []> input_25_pad_type_0 = const()[name = tensor<string, []>("input_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_25_pad_0 = const()[name = tensor<string, []>("input_25_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_25_strides_0 = const()[name = tensor<string, []>("input_25_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> input_25_dilations_0 = const()[name = tensor<string, []>("input_25_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_25_groups_0 = const()[name = tensor<string, []>("input_25_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 128, 3, 3]> model_3_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_3_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(91328)))];
            tensor<fp16, [128]> model_3_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_3_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(386304)))];
            tensor<fp16, [1, 128, 80, 80]> input_25_cast_fp16 = conv(bias = model_3_conv_bias_to_fp16, dilations = input_25_dilations_0, groups = input_25_groups_0, pad = input_25_pad_0, pad_type = input_25_pad_type_0, strides = input_25_strides_0, weight = model_3_conv_weight_to_fp16, x = input_23_cast_fp16)[name = tensor<string, []>("input_25_cast_fp16")];
            tensor<fp16, [1, 128, 80, 80]> input_27_cast_fp16 = silu(x = input_25_cast_fp16)[name = tensor<string, []>("input_27_cast_fp16")];
            tensor<int32, []> var_138 = const()[name = tensor<string, []>("op_138"), val = tensor<int32, []>(1)];
            tensor<string, []> input_29_pad_type_0 = const()[name = tensor<string, []>("input_29_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_29_strides_0 = const()[name = tensor<string, []>("input_29_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_29_pad_0 = const()[name = tensor<string, []>("input_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_29_dilations_0 = const()[name = tensor<string, []>("input_29_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_29_groups_0 = const()[name = tensor<string, []>("input_29_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 128, 1, 1]> model_4_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_4_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(386624)))];
            tensor<fp16, [128]> model_4_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_4_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(419456)))];
            tensor<fp16, [1, 128, 80, 80]> input_29_cast_fp16 = conv(bias = model_4_cv1_conv_bias_to_fp16, dilations = input_29_dilations_0, groups = input_29_groups_0, pad = input_29_pad_0, pad_type = input_29_pad_type_0, strides = input_29_strides_0, weight = model_4_cv1_conv_weight_to_fp16, x = input_27_cast_fp16)[name = tensor<string, []>("input_29_cast_fp16")];
            tensor<fp16, [1, 128, 80, 80]> var_151_cast_fp16 = silu(x = input_29_cast_fp16)[name = tensor<string, []>("op_151_cast_fp16")];
            tensor<int32, [2]> var_152 = const()[name = tensor<string, []>("op_152"), val = tensor<int32, [2]>([64, 64])];
            tensor<int32, []> var_153_axis_0 = const()[name = tensor<string, []>("op_153_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 80, 80]> var_153_cast_fp16_0, tensor<fp16, [1, 64, 80, 80]> var_153_cast_fp16_1 = split(axis = var_153_axis_0, split_sizes = var_152, x = var_151_cast_fp16)[name = tensor<string, []>("op_153_cast_fp16")];
            tensor<string, []> input_33_pad_type_0 = const()[name = tensor<string, []>("input_33_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_33_pad_0 = const()[name = tensor<string, []>("input_33_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_33_strides_0 = const()[name = tensor<string, []>("input_33_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_33_dilations_0 = const()[name = tensor<string, []>("input_33_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_33_groups_0 = const()[name = tensor<string, []>("input_33_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [32, 64, 3, 3]> model_4_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_4_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [32, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(419776)))];
            tensor<fp16, [32]> model_4_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_4_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(456704)))];
            tensor<fp16, [1, 32, 80, 80]> input_33_cast_fp16 = conv(bias = model_4_m_0_cv1_conv_bias_to_fp16, dilations = input_33_dilations_0, groups = input_33_groups_0, pad = input_33_pad_0, pad_type = input_33_pad_type_0, strides = input_33_strides_0, weight = model_4_m_0_cv1_conv_weight_to_fp16, x = var_153_cast_fp16_1)[name = tensor<string, []>("input_33_cast_fp16")];
            tensor<fp16, [1, 32, 80, 80]> input_35_cast_fp16 = silu(x = input_33_cast_fp16)[name = tensor<string, []>("input_35_cast_fp16")];
            tensor<string, []> input_37_pad_type_0 = const()[name = tensor<string, []>("input_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_37_pad_0 = const()[name = tensor<string, []>("input_37_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_37_strides_0 = const()[name = tensor<string, []>("input_37_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_37_dilations_0 = const()[name = tensor<string, []>("input_37_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_37_groups_0 = const()[name = tensor<string, []>("input_37_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 32, 3, 3]> model_4_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_4_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(456832)))];
            tensor<fp16, [64]> model_4_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_4_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(493760)))];
            tensor<fp16, [1, 64, 80, 80]> input_37_cast_fp16 = conv(bias = model_4_m_0_cv2_conv_bias_to_fp16, dilations = input_37_dilations_0, groups = input_37_groups_0, pad = input_37_pad_0, pad_type = input_37_pad_type_0, strides = input_37_strides_0, weight = model_4_m_0_cv2_conv_weight_to_fp16, x = input_35_cast_fp16)[name = tensor<string, []>("input_37_cast_fp16")];
            tensor<fp16, [1, 64, 80, 80]> var_175_cast_fp16 = silu(x = input_37_cast_fp16)[name = tensor<string, []>("op_175_cast_fp16")];
            tensor<fp16, [1, 64, 80, 80]> var_176_cast_fp16 = add(x = var_153_cast_fp16_1, y = var_175_cast_fp16)[name = tensor<string, []>("op_176_cast_fp16")];
            tensor<bool, []> input_39_interleave_0 = const()[name = tensor<string, []>("input_39_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 192, 80, 80]> input_39_cast_fp16 = concat(axis = var_138, interleave = input_39_interleave_0, values = (var_153_cast_fp16_0, var_153_cast_fp16_1, var_176_cast_fp16))[name = tensor<string, []>("input_39_cast_fp16")];
            tensor<string, []> input_41_pad_type_0 = const()[name = tensor<string, []>("input_41_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_41_strides_0 = const()[name = tensor<string, []>("input_41_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_41_pad_0 = const()[name = tensor<string, []>("input_41_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_41_dilations_0 = const()[name = tensor<string, []>("input_41_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_41_groups_0 = const()[name = tensor<string, []>("input_41_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [256, 192, 1, 1]> model_4_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_4_cv2_conv_weight_to_fp16"), val = tensor<fp16, [256, 192, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(493952)))];
            tensor<fp16, [256]> model_4_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_4_cv2_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(592320)))];
            tensor<fp16, [1, 256, 80, 80]> input_41_cast_fp16 = conv(bias = model_4_cv2_conv_bias_to_fp16, dilations = input_41_dilations_0, groups = input_41_groups_0, pad = input_41_pad_0, pad_type = input_41_pad_type_0, strides = input_41_strides_0, weight = model_4_cv2_conv_weight_to_fp16, x = input_39_cast_fp16)[name = tensor<string, []>("input_41_cast_fp16")];
            tensor<fp16, [1, 256, 80, 80]> input_43_cast_fp16 = silu(x = input_41_cast_fp16)[name = tensor<string, []>("input_43_cast_fp16")];
            tensor<string, []> input_45_pad_type_0 = const()[name = tensor<string, []>("input_45_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_45_pad_0 = const()[name = tensor<string, []>("input_45_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_45_strides_0 = const()[name = tensor<string, []>("input_45_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> input_45_dilations_0 = const()[name = tensor<string, []>("input_45_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_45_groups_0 = const()[name = tensor<string, []>("input_45_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [256, 256, 3, 3]> model_5_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_5_conv_weight_to_fp16"), val = tensor<fp16, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(592896)))];
            tensor<fp16, [256]> model_5_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_5_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1772608)))];
            tensor<fp16, [1, 256, 40, 40]> input_45_cast_fp16 = conv(bias = model_5_conv_bias_to_fp16, dilations = input_45_dilations_0, groups = input_45_groups_0, pad = input_45_pad_0, pad_type = input_45_pad_type_0, strides = input_45_strides_0, weight = model_5_conv_weight_to_fp16, x = input_43_cast_fp16)[name = tensor<string, []>("input_45_cast_fp16")];
            tensor<fp16, [1, 256, 40, 40]> input_47_cast_fp16 = silu(x = input_45_cast_fp16)[name = tensor<string, []>("input_47_cast_fp16")];
            tensor<int32, []> var_206 = const()[name = tensor<string, []>("op_206"), val = tensor<int32, []>(1)];
            tensor<string, []> input_49_pad_type_0 = const()[name = tensor<string, []>("input_49_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_49_strides_0 = const()[name = tensor<string, []>("input_49_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_49_pad_0 = const()[name = tensor<string, []>("input_49_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_49_dilations_0 = const()[name = tensor<string, []>("input_49_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_49_groups_0 = const()[name = tensor<string, []>("input_49_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [256, 256, 1, 1]> model_6_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_6_cv1_conv_weight_to_fp16"), val = tensor<fp16, [256, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1773184)))];
            tensor<fp16, [256]> model_6_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_6_cv1_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1904320)))];
            tensor<fp16, [1, 256, 40, 40]> input_49_cast_fp16 = conv(bias = model_6_cv1_conv_bias_to_fp16, dilations = input_49_dilations_0, groups = input_49_groups_0, pad = input_49_pad_0, pad_type = input_49_pad_type_0, strides = input_49_strides_0, weight = model_6_cv1_conv_weight_to_fp16, x = input_47_cast_fp16)[name = tensor<string, []>("input_49_cast_fp16")];
            tensor<fp16, [1, 256, 40, 40]> var_219_cast_fp16 = silu(x = input_49_cast_fp16)[name = tensor<string, []>("op_219_cast_fp16")];
            tensor<int32, [2]> var_220 = const()[name = tensor<string, []>("op_220"), val = tensor<int32, [2]>([128, 128])];
            tensor<int32, []> var_221_axis_0 = const()[name = tensor<string, []>("op_221_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 128, 40, 40]> var_221_cast_fp16_0, tensor<fp16, [1, 128, 40, 40]> var_221_cast_fp16_1 = split(axis = var_221_axis_0, split_sizes = var_220, x = var_219_cast_fp16)[name = tensor<string, []>("op_221_cast_fp16")];
            tensor<string, []> input_53_pad_type_0 = const()[name = tensor<string, []>("input_53_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_53_strides_0 = const()[name = tensor<string, []>("input_53_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_53_pad_0 = const()[name = tensor<string, []>("input_53_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_53_dilations_0 = const()[name = tensor<string, []>("input_53_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_53_groups_0 = const()[name = tensor<string, []>("input_53_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 128, 1, 1]> model_6_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_6_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1904896)))];
            tensor<fp16, [64]> model_6_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_6_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1921344)))];
            tensor<fp16, [1, 64, 40, 40]> input_53_cast_fp16 = conv(bias = model_6_m_0_cv1_conv_bias_to_fp16, dilations = input_53_dilations_0, groups = input_53_groups_0, pad = input_53_pad_0, pad_type = input_53_pad_type_0, strides = input_53_strides_0, weight = model_6_m_0_cv1_conv_weight_to_fp16, x = var_221_cast_fp16_1)[name = tensor<string, []>("input_53_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> input_55_cast_fp16 = silu(x = input_53_cast_fp16)[name = tensor<string, []>("input_55_cast_fp16")];
            tensor<string, []> input_57_pad_type_0 = const()[name = tensor<string, []>("input_57_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_57_pad_0 = const()[name = tensor<string, []>("input_57_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_57_strides_0 = const()[name = tensor<string, []>("input_57_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_57_dilations_0 = const()[name = tensor<string, []>("input_57_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_57_groups_0 = const()[name = tensor<string, []>("input_57_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 3, 3]> model_6_m_0_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_6_m_0_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1921536)))];
            tensor<fp16, [64]> model_6_m_0_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_6_m_0_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1995328)))];
            tensor<fp16, [1, 64, 40, 40]> input_57_cast_fp16 = conv(bias = model_6_m_0_m_0_cv1_conv_bias_to_fp16, dilations = input_57_dilations_0, groups = input_57_groups_0, pad = input_57_pad_0, pad_type = input_57_pad_type_0, strides = input_57_strides_0, weight = model_6_m_0_m_0_cv1_conv_weight_to_fp16, x = input_55_cast_fp16)[name = tensor<string, []>("input_57_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> input_59_cast_fp16 = silu(x = input_57_cast_fp16)[name = tensor<string, []>("input_59_cast_fp16")];
            tensor<string, []> input_61_pad_type_0 = const()[name = tensor<string, []>("input_61_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_61_pad_0 = const()[name = tensor<string, []>("input_61_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_61_strides_0 = const()[name = tensor<string, []>("input_61_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_61_dilations_0 = const()[name = tensor<string, []>("input_61_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_61_groups_0 = const()[name = tensor<string, []>("input_61_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 3, 3]> model_6_m_0_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_6_m_0_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1995520)))];
            tensor<fp16, [64]> model_6_m_0_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_6_m_0_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2069312)))];
            tensor<fp16, [1, 64, 40, 40]> input_61_cast_fp16 = conv(bias = model_6_m_0_m_0_cv2_conv_bias_to_fp16, dilations = input_61_dilations_0, groups = input_61_groups_0, pad = input_61_pad_0, pad_type = input_61_pad_type_0, strides = input_61_strides_0, weight = model_6_m_0_m_0_cv2_conv_weight_to_fp16, x = input_59_cast_fp16)[name = tensor<string, []>("input_61_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> var_258_cast_fp16 = silu(x = input_61_cast_fp16)[name = tensor<string, []>("op_258_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> input_63_cast_fp16 = add(x = input_55_cast_fp16, y = var_258_cast_fp16)[name = tensor<string, []>("input_63_cast_fp16")];
            tensor<string, []> input_65_pad_type_0 = const()[name = tensor<string, []>("input_65_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_65_pad_0 = const()[name = tensor<string, []>("input_65_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_65_strides_0 = const()[name = tensor<string, []>("input_65_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_65_dilations_0 = const()[name = tensor<string, []>("input_65_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_65_groups_0 = const()[name = tensor<string, []>("input_65_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 3, 3]> model_6_m_0_m_1_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_6_m_0_m_1_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2069504)))];
            tensor<fp16, [64]> model_6_m_0_m_1_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_6_m_0_m_1_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2143296)))];
            tensor<fp16, [1, 64, 40, 40]> input_65_cast_fp16 = conv(bias = model_6_m_0_m_1_cv1_conv_bias_to_fp16, dilations = input_65_dilations_0, groups = input_65_groups_0, pad = input_65_pad_0, pad_type = input_65_pad_type_0, strides = input_65_strides_0, weight = model_6_m_0_m_1_cv1_conv_weight_to_fp16, x = input_63_cast_fp16)[name = tensor<string, []>("input_65_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> input_67_cast_fp16 = silu(x = input_65_cast_fp16)[name = tensor<string, []>("input_67_cast_fp16")];
            tensor<string, []> input_69_pad_type_0 = const()[name = tensor<string, []>("input_69_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_69_pad_0 = const()[name = tensor<string, []>("input_69_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_69_strides_0 = const()[name = tensor<string, []>("input_69_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_69_dilations_0 = const()[name = tensor<string, []>("input_69_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_69_groups_0 = const()[name = tensor<string, []>("input_69_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 3, 3]> model_6_m_0_m_1_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_6_m_0_m_1_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2143488)))];
            tensor<fp16, [64]> model_6_m_0_m_1_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_6_m_0_m_1_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2217280)))];
            tensor<fp16, [1, 64, 40, 40]> input_69_cast_fp16 = conv(bias = model_6_m_0_m_1_cv2_conv_bias_to_fp16, dilations = input_69_dilations_0, groups = input_69_groups_0, pad = input_69_pad_0, pad_type = input_69_pad_type_0, strides = input_69_strides_0, weight = model_6_m_0_m_1_cv2_conv_weight_to_fp16, x = input_67_cast_fp16)[name = tensor<string, []>("input_69_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> var_279_cast_fp16 = silu(x = input_69_cast_fp16)[name = tensor<string, []>("op_279_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> var_280_cast_fp16 = add(x = input_63_cast_fp16, y = var_279_cast_fp16)[name = tensor<string, []>("op_280_cast_fp16")];
            tensor<string, []> input_71_pad_type_0 = const()[name = tensor<string, []>("input_71_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_71_strides_0 = const()[name = tensor<string, []>("input_71_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_71_pad_0 = const()[name = tensor<string, []>("input_71_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_71_dilations_0 = const()[name = tensor<string, []>("input_71_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_71_groups_0 = const()[name = tensor<string, []>("input_71_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 128, 1, 1]> model_6_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_6_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2217472)))];
            tensor<fp16, [64]> model_6_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_6_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2233920)))];
            tensor<fp16, [1, 64, 40, 40]> input_71_cast_fp16 = conv(bias = model_6_m_0_cv2_conv_bias_to_fp16, dilations = input_71_dilations_0, groups = input_71_groups_0, pad = input_71_pad_0, pad_type = input_71_pad_type_0, strides = input_71_strides_0, weight = model_6_m_0_cv2_conv_weight_to_fp16, x = var_221_cast_fp16_1)[name = tensor<string, []>("input_71_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> var_289_cast_fp16 = silu(x = input_71_cast_fp16)[name = tensor<string, []>("op_289_cast_fp16")];
            tensor<bool, []> input_73_interleave_0 = const()[name = tensor<string, []>("input_73_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 128, 40, 40]> input_73_cast_fp16 = concat(axis = var_206, interleave = input_73_interleave_0, values = (var_280_cast_fp16, var_289_cast_fp16))[name = tensor<string, []>("input_73_cast_fp16")];
            tensor<string, []> input_75_pad_type_0 = const()[name = tensor<string, []>("input_75_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_75_strides_0 = const()[name = tensor<string, []>("input_75_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_75_pad_0 = const()[name = tensor<string, []>("input_75_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_75_dilations_0 = const()[name = tensor<string, []>("input_75_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_75_groups_0 = const()[name = tensor<string, []>("input_75_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 128, 1, 1]> model_6_m_0_cv3_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_6_m_0_cv3_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2234112)))];
            tensor<fp16, [128]> model_6_m_0_cv3_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_6_m_0_cv3_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2266944)))];
            tensor<fp16, [1, 128, 40, 40]> input_75_cast_fp16 = conv(bias = model_6_m_0_cv3_conv_bias_to_fp16, dilations = input_75_dilations_0, groups = input_75_groups_0, pad = input_75_pad_0, pad_type = input_75_pad_type_0, strides = input_75_strides_0, weight = model_6_m_0_cv3_conv_weight_to_fp16, x = input_73_cast_fp16)[name = tensor<string, []>("input_75_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> var_300_cast_fp16 = silu(x = input_75_cast_fp16)[name = tensor<string, []>("op_300_cast_fp16")];
            tensor<bool, []> input_77_interleave_0 = const()[name = tensor<string, []>("input_77_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 40, 40]> input_77_cast_fp16 = concat(axis = var_206, interleave = input_77_interleave_0, values = (var_221_cast_fp16_0, var_221_cast_fp16_1, var_300_cast_fp16))[name = tensor<string, []>("input_77_cast_fp16")];
            tensor<string, []> input_79_pad_type_0 = const()[name = tensor<string, []>("input_79_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_79_strides_0 = const()[name = tensor<string, []>("input_79_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_79_pad_0 = const()[name = tensor<string, []>("input_79_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_79_dilations_0 = const()[name = tensor<string, []>("input_79_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_79_groups_0 = const()[name = tensor<string, []>("input_79_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [256, 384, 1, 1]> model_6_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_6_cv2_conv_weight_to_fp16"), val = tensor<fp16, [256, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2267264)))];
            tensor<fp16, [256]> model_6_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_6_cv2_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2463936)))];
            tensor<fp16, [1, 256, 40, 40]> input_79_cast_fp16 = conv(bias = model_6_cv2_conv_bias_to_fp16, dilations = input_79_dilations_0, groups = input_79_groups_0, pad = input_79_pad_0, pad_type = input_79_pad_type_0, strides = input_79_strides_0, weight = model_6_cv2_conv_weight_to_fp16, x = input_77_cast_fp16)[name = tensor<string, []>("input_79_cast_fp16")];
            tensor<fp16, [1, 256, 40, 40]> input_81_cast_fp16 = silu(x = input_79_cast_fp16)[name = tensor<string, []>("input_81_cast_fp16")];
            tensor<string, []> input_83_pad_type_0 = const()[name = tensor<string, []>("input_83_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_83_pad_0 = const()[name = tensor<string, []>("input_83_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_83_strides_0 = const()[name = tensor<string, []>("input_83_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> input_83_dilations_0 = const()[name = tensor<string, []>("input_83_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_83_groups_0 = const()[name = tensor<string, []>("input_83_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [512, 256, 3, 3]> model_7_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_7_conv_weight_to_fp16"), val = tensor<fp16, [512, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2464512)))];
            tensor<fp16, [512]> model_7_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_7_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4823872)))];
            tensor<fp16, [1, 512, 20, 20]> input_83_cast_fp16 = conv(bias = model_7_conv_bias_to_fp16, dilations = input_83_dilations_0, groups = input_83_groups_0, pad = input_83_pad_0, pad_type = input_83_pad_type_0, strides = input_83_strides_0, weight = model_7_conv_weight_to_fp16, x = input_81_cast_fp16)[name = tensor<string, []>("input_83_cast_fp16")];
            tensor<fp16, [1, 512, 20, 20]> input_85_cast_fp16 = silu(x = input_83_cast_fp16)[name = tensor<string, []>("input_85_cast_fp16")];
            tensor<int32, []> var_330 = const()[name = tensor<string, []>("op_330"), val = tensor<int32, []>(1)];
            tensor<string, []> input_87_pad_type_0 = const()[name = tensor<string, []>("input_87_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_87_strides_0 = const()[name = tensor<string, []>("input_87_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_87_pad_0 = const()[name = tensor<string, []>("input_87_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_87_dilations_0 = const()[name = tensor<string, []>("input_87_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_87_groups_0 = const()[name = tensor<string, []>("input_87_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [512, 512, 1, 1]> model_8_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_8_cv1_conv_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4824960)))];
            tensor<fp16, [512]> model_8_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_8_cv1_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5349312)))];
            tensor<fp16, [1, 512, 20, 20]> input_87_cast_fp16 = conv(bias = model_8_cv1_conv_bias_to_fp16, dilations = input_87_dilations_0, groups = input_87_groups_0, pad = input_87_pad_0, pad_type = input_87_pad_type_0, strides = input_87_strides_0, weight = model_8_cv1_conv_weight_to_fp16, x = input_85_cast_fp16)[name = tensor<string, []>("input_87_cast_fp16")];
            tensor<fp16, [1, 512, 20, 20]> var_343_cast_fp16 = silu(x = input_87_cast_fp16)[name = tensor<string, []>("op_343_cast_fp16")];
            tensor<int32, [2]> var_344 = const()[name = tensor<string, []>("op_344"), val = tensor<int32, [2]>([256, 256])];
            tensor<int32, []> var_345_axis_0 = const()[name = tensor<string, []>("op_345_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 256, 20, 20]> var_345_cast_fp16_0, tensor<fp16, [1, 256, 20, 20]> var_345_cast_fp16_1 = split(axis = var_345_axis_0, split_sizes = var_344, x = var_343_cast_fp16)[name = tensor<string, []>("op_345_cast_fp16")];
            tensor<string, []> input_91_pad_type_0 = const()[name = tensor<string, []>("input_91_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_91_strides_0 = const()[name = tensor<string, []>("input_91_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_91_pad_0 = const()[name = tensor<string, []>("input_91_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_91_dilations_0 = const()[name = tensor<string, []>("input_91_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_91_groups_0 = const()[name = tensor<string, []>("input_91_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 256, 1, 1]> model_8_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_8_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5350400)))];
            tensor<fp16, [128]> model_8_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_8_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5416000)))];
            tensor<fp16, [1, 128, 20, 20]> input_91_cast_fp16 = conv(bias = model_8_m_0_cv1_conv_bias_to_fp16, dilations = input_91_dilations_0, groups = input_91_groups_0, pad = input_91_pad_0, pad_type = input_91_pad_type_0, strides = input_91_strides_0, weight = model_8_m_0_cv1_conv_weight_to_fp16, x = var_345_cast_fp16_1)[name = tensor<string, []>("input_91_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> input_93_cast_fp16 = silu(x = input_91_cast_fp16)[name = tensor<string, []>("input_93_cast_fp16")];
            tensor<string, []> input_95_pad_type_0 = const()[name = tensor<string, []>("input_95_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_95_pad_0 = const()[name = tensor<string, []>("input_95_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_95_strides_0 = const()[name = tensor<string, []>("input_95_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_95_dilations_0 = const()[name = tensor<string, []>("input_95_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_95_groups_0 = const()[name = tensor<string, []>("input_95_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 128, 3, 3]> model_8_m_0_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_8_m_0_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5416320)))];
            tensor<fp16, [128]> model_8_m_0_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_8_m_0_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5711296)))];
            tensor<fp16, [1, 128, 20, 20]> input_95_cast_fp16 = conv(bias = model_8_m_0_m_0_cv1_conv_bias_to_fp16, dilations = input_95_dilations_0, groups = input_95_groups_0, pad = input_95_pad_0, pad_type = input_95_pad_type_0, strides = input_95_strides_0, weight = model_8_m_0_m_0_cv1_conv_weight_to_fp16, x = input_93_cast_fp16)[name = tensor<string, []>("input_95_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> input_97_cast_fp16 = silu(x = input_95_cast_fp16)[name = tensor<string, []>("input_97_cast_fp16")];
            tensor<string, []> input_99_pad_type_0 = const()[name = tensor<string, []>("input_99_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_99_pad_0 = const()[name = tensor<string, []>("input_99_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_99_strides_0 = const()[name = tensor<string, []>("input_99_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_99_dilations_0 = const()[name = tensor<string, []>("input_99_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_99_groups_0 = const()[name = tensor<string, []>("input_99_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 128, 3, 3]> model_8_m_0_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_8_m_0_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5711616)))];
            tensor<fp16, [128]> model_8_m_0_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_8_m_0_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6006592)))];
            tensor<fp16, [1, 128, 20, 20]> input_99_cast_fp16 = conv(bias = model_8_m_0_m_0_cv2_conv_bias_to_fp16, dilations = input_99_dilations_0, groups = input_99_groups_0, pad = input_99_pad_0, pad_type = input_99_pad_type_0, strides = input_99_strides_0, weight = model_8_m_0_m_0_cv2_conv_weight_to_fp16, x = input_97_cast_fp16)[name = tensor<string, []>("input_99_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> var_382_cast_fp16 = silu(x = input_99_cast_fp16)[name = tensor<string, []>("op_382_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> input_101_cast_fp16 = add(x = input_93_cast_fp16, y = var_382_cast_fp16)[name = tensor<string, []>("input_101_cast_fp16")];
            tensor<string, []> input_103_pad_type_0 = const()[name = tensor<string, []>("input_103_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_103_pad_0 = const()[name = tensor<string, []>("input_103_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_103_strides_0 = const()[name = tensor<string, []>("input_103_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_103_dilations_0 = const()[name = tensor<string, []>("input_103_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_103_groups_0 = const()[name = tensor<string, []>("input_103_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 128, 3, 3]> model_8_m_0_m_1_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_8_m_0_m_1_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6006912)))];
            tensor<fp16, [128]> model_8_m_0_m_1_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_8_m_0_m_1_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6301888)))];
            tensor<fp16, [1, 128, 20, 20]> input_103_cast_fp16 = conv(bias = model_8_m_0_m_1_cv1_conv_bias_to_fp16, dilations = input_103_dilations_0, groups = input_103_groups_0, pad = input_103_pad_0, pad_type = input_103_pad_type_0, strides = input_103_strides_0, weight = model_8_m_0_m_1_cv1_conv_weight_to_fp16, x = input_101_cast_fp16)[name = tensor<string, []>("input_103_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> input_105_cast_fp16 = silu(x = input_103_cast_fp16)[name = tensor<string, []>("input_105_cast_fp16")];
            tensor<string, []> input_107_pad_type_0 = const()[name = tensor<string, []>("input_107_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_107_pad_0 = const()[name = tensor<string, []>("input_107_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_107_strides_0 = const()[name = tensor<string, []>("input_107_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_107_dilations_0 = const()[name = tensor<string, []>("input_107_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_107_groups_0 = const()[name = tensor<string, []>("input_107_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 128, 3, 3]> model_8_m_0_m_1_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_8_m_0_m_1_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6302208)))];
            tensor<fp16, [128]> model_8_m_0_m_1_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_8_m_0_m_1_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6597184)))];
            tensor<fp16, [1, 128, 20, 20]> input_107_cast_fp16 = conv(bias = model_8_m_0_m_1_cv2_conv_bias_to_fp16, dilations = input_107_dilations_0, groups = input_107_groups_0, pad = input_107_pad_0, pad_type = input_107_pad_type_0, strides = input_107_strides_0, weight = model_8_m_0_m_1_cv2_conv_weight_to_fp16, x = input_105_cast_fp16)[name = tensor<string, []>("input_107_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> var_403_cast_fp16 = silu(x = input_107_cast_fp16)[name = tensor<string, []>("op_403_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> var_404_cast_fp16 = add(x = input_101_cast_fp16, y = var_403_cast_fp16)[name = tensor<string, []>("op_404_cast_fp16")];
            tensor<string, []> input_109_pad_type_0 = const()[name = tensor<string, []>("input_109_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_109_strides_0 = const()[name = tensor<string, []>("input_109_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_109_pad_0 = const()[name = tensor<string, []>("input_109_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_109_dilations_0 = const()[name = tensor<string, []>("input_109_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_109_groups_0 = const()[name = tensor<string, []>("input_109_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 256, 1, 1]> model_8_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_8_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6597504)))];
            tensor<fp16, [128]> model_8_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_8_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6663104)))];
            tensor<fp16, [1, 128, 20, 20]> input_109_cast_fp16 = conv(bias = model_8_m_0_cv2_conv_bias_to_fp16, dilations = input_109_dilations_0, groups = input_109_groups_0, pad = input_109_pad_0, pad_type = input_109_pad_type_0, strides = input_109_strides_0, weight = model_8_m_0_cv2_conv_weight_to_fp16, x = var_345_cast_fp16_1)[name = tensor<string, []>("input_109_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> var_413_cast_fp16 = silu(x = input_109_cast_fp16)[name = tensor<string, []>("op_413_cast_fp16")];
            tensor<bool, []> input_111_interleave_0 = const()[name = tensor<string, []>("input_111_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 256, 20, 20]> input_111_cast_fp16 = concat(axis = var_330, interleave = input_111_interleave_0, values = (var_404_cast_fp16, var_413_cast_fp16))[name = tensor<string, []>("input_111_cast_fp16")];
            tensor<string, []> input_113_pad_type_0 = const()[name = tensor<string, []>("input_113_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_113_strides_0 = const()[name = tensor<string, []>("input_113_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_113_pad_0 = const()[name = tensor<string, []>("input_113_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_113_dilations_0 = const()[name = tensor<string, []>("input_113_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_113_groups_0 = const()[name = tensor<string, []>("input_113_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [256, 256, 1, 1]> model_8_m_0_cv3_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_8_m_0_cv3_conv_weight_to_fp16"), val = tensor<fp16, [256, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6663424)))];
            tensor<fp16, [256]> model_8_m_0_cv3_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_8_m_0_cv3_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6794560)))];
            tensor<fp16, [1, 256, 20, 20]> input_113_cast_fp16 = conv(bias = model_8_m_0_cv3_conv_bias_to_fp16, dilations = input_113_dilations_0, groups = input_113_groups_0, pad = input_113_pad_0, pad_type = input_113_pad_type_0, strides = input_113_strides_0, weight = model_8_m_0_cv3_conv_weight_to_fp16, x = input_111_cast_fp16)[name = tensor<string, []>("input_113_cast_fp16")];
            tensor<fp16, [1, 256, 20, 20]> var_424_cast_fp16 = silu(x = input_113_cast_fp16)[name = tensor<string, []>("op_424_cast_fp16")];
            tensor<bool, []> input_115_interleave_0 = const()[name = tensor<string, []>("input_115_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 768, 20, 20]> input_115_cast_fp16 = concat(axis = var_330, interleave = input_115_interleave_0, values = (var_345_cast_fp16_0, var_345_cast_fp16_1, var_424_cast_fp16))[name = tensor<string, []>("input_115_cast_fp16")];
            tensor<string, []> input_117_pad_type_0 = const()[name = tensor<string, []>("input_117_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_117_strides_0 = const()[name = tensor<string, []>("input_117_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_117_pad_0 = const()[name = tensor<string, []>("input_117_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_117_dilations_0 = const()[name = tensor<string, []>("input_117_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_117_groups_0 = const()[name = tensor<string, []>("input_117_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [512, 768, 1, 1]> model_8_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_8_cv2_conv_weight_to_fp16"), val = tensor<fp16, [512, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6795136)))];
            tensor<fp16, [512]> model_8_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_8_cv2_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7581632)))];
            tensor<fp16, [1, 512, 20, 20]> input_117_cast_fp16 = conv(bias = model_8_cv2_conv_bias_to_fp16, dilations = input_117_dilations_0, groups = input_117_groups_0, pad = input_117_pad_0, pad_type = input_117_pad_type_0, strides = input_117_strides_0, weight = model_8_cv2_conv_weight_to_fp16, x = input_115_cast_fp16)[name = tensor<string, []>("input_117_cast_fp16")];
            tensor<fp16, [1, 512, 20, 20]> input_119_cast_fp16 = silu(x = input_117_cast_fp16)[name = tensor<string, []>("input_119_cast_fp16")];
            tensor<int32, []> var_441 = const()[name = tensor<string, []>("op_441"), val = tensor<int32, []>(1)];
            tensor<string, []> input_121_pad_type_0 = const()[name = tensor<string, []>("input_121_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_121_strides_0 = const()[name = tensor<string, []>("input_121_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_121_pad_0 = const()[name = tensor<string, []>("input_121_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_121_dilations_0 = const()[name = tensor<string, []>("input_121_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_121_groups_0 = const()[name = tensor<string, []>("input_121_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [256, 512, 1, 1]> model_9_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_9_cv1_conv_weight_to_fp16"), val = tensor<fp16, [256, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7582720)))];
            tensor<fp16, [256]> model_9_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_9_cv1_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7844928)))];
            tensor<fp16, [1, 256, 20, 20]> input_121_cast_fp16 = conv(bias = model_9_cv1_conv_bias_to_fp16, dilations = input_121_dilations_0, groups = input_121_groups_0, pad = input_121_pad_0, pad_type = input_121_pad_type_0, strides = input_121_strides_0, weight = model_9_cv1_conv_weight_to_fp16, x = input_119_cast_fp16)[name = tensor<string, []>("input_121_cast_fp16")];
            tensor<fp16, [1, 256, 20, 20]> input_123_cast_fp16 = silu(x = input_121_cast_fp16)[name = tensor<string, []>("input_123_cast_fp16")];
            tensor<int32, [2]> var_453 = const()[name = tensor<string, []>("op_453"), val = tensor<int32, [2]>([5, 5])];
            tensor<int32, [2]> var_454 = const()[name = tensor<string, []>("op_454"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_125_pad_type_0 = const()[name = tensor<string, []>("input_125_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_125_pad_0 = const()[name = tensor<string, []>("input_125_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<bool, []> input_125_ceil_mode_0 = const()[name = tensor<string, []>("input_125_ceil_mode_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 256, 20, 20]> input_125_cast_fp16 = max_pool(ceil_mode = input_125_ceil_mode_0, kernel_sizes = var_453, pad = input_125_pad_0, pad_type = input_125_pad_type_0, strides = var_454, x = input_123_cast_fp16)[name = tensor<string, []>("input_125_cast_fp16")];
            tensor<int32, [2]> var_458 = const()[name = tensor<string, []>("op_458"), val = tensor<int32, [2]>([5, 5])];
            tensor<int32, [2]> var_459 = const()[name = tensor<string, []>("op_459"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_127_pad_type_0 = const()[name = tensor<string, []>("input_127_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_127_pad_0 = const()[name = tensor<string, []>("input_127_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<bool, []> input_127_ceil_mode_0 = const()[name = tensor<string, []>("input_127_ceil_mode_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 256, 20, 20]> input_127_cast_fp16 = max_pool(ceil_mode = input_127_ceil_mode_0, kernel_sizes = var_458, pad = input_127_pad_0, pad_type = input_127_pad_type_0, strides = var_459, x = input_125_cast_fp16)[name = tensor<string, []>("input_127_cast_fp16")];
            tensor<int32, [2]> var_463 = const()[name = tensor<string, []>("op_463"), val = tensor<int32, [2]>([5, 5])];
            tensor<int32, [2]> var_464 = const()[name = tensor<string, []>("op_464"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_467_pad_type_0 = const()[name = tensor<string, []>("op_467_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_467_pad_0 = const()[name = tensor<string, []>("op_467_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<bool, []> var_467_ceil_mode_0 = const()[name = tensor<string, []>("op_467_ceil_mode_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 256, 20, 20]> var_467_cast_fp16 = max_pool(ceil_mode = var_467_ceil_mode_0, kernel_sizes = var_463, pad = var_467_pad_0, pad_type = var_467_pad_type_0, strides = var_464, x = input_127_cast_fp16)[name = tensor<string, []>("op_467_cast_fp16")];
            tensor<bool, []> input_129_interleave_0 = const()[name = tensor<string, []>("input_129_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1024, 20, 20]> input_129_cast_fp16 = concat(axis = var_441, interleave = input_129_interleave_0, values = (input_123_cast_fp16, input_125_cast_fp16, input_127_cast_fp16, var_467_cast_fp16))[name = tensor<string, []>("input_129_cast_fp16")];
            tensor<string, []> input_131_pad_type_0 = const()[name = tensor<string, []>("input_131_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_131_strides_0 = const()[name = tensor<string, []>("input_131_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_131_pad_0 = const()[name = tensor<string, []>("input_131_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_131_dilations_0 = const()[name = tensor<string, []>("input_131_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_131_groups_0 = const()[name = tensor<string, []>("input_131_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [512, 1024, 1, 1]> model_9_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_9_cv2_conv_weight_to_fp16"), val = tensor<fp16, [512, 1024, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7845504)))];
            tensor<fp16, [512]> model_9_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_9_cv2_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8894144)))];
            tensor<fp16, [1, 512, 20, 20]> input_131_cast_fp16 = conv(bias = model_9_cv2_conv_bias_to_fp16, dilations = input_131_dilations_0, groups = input_131_groups_0, pad = input_131_pad_0, pad_type = input_131_pad_type_0, strides = input_131_strides_0, weight = model_9_cv2_conv_weight_to_fp16, x = input_129_cast_fp16)[name = tensor<string, []>("input_131_cast_fp16")];
            tensor<fp16, [1, 512, 20, 20]> input_133_cast_fp16 = silu(x = input_131_cast_fp16)[name = tensor<string, []>("input_133_cast_fp16")];
            tensor<int32, []> var_486 = const()[name = tensor<string, []>("op_486"), val = tensor<int32, []>(-1)];
            tensor<int32, []> var_492 = const()[name = tensor<string, []>("op_492"), val = tensor<int32, []>(1)];
            tensor<string, []> input_135_pad_type_0 = const()[name = tensor<string, []>("input_135_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_135_strides_0 = const()[name = tensor<string, []>("input_135_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_135_pad_0 = const()[name = tensor<string, []>("input_135_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_135_dilations_0 = const()[name = tensor<string, []>("input_135_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_135_groups_0 = const()[name = tensor<string, []>("input_135_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [512, 512, 1, 1]> model_10_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_10_cv1_conv_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8895232)))];
            tensor<fp16, [512]> model_10_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_10_cv1_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9419584)))];
            tensor<fp16, [1, 512, 20, 20]> input_135_cast_fp16 = conv(bias = model_10_cv1_conv_bias_to_fp16, dilations = input_135_dilations_0, groups = input_135_groups_0, pad = input_135_pad_0, pad_type = input_135_pad_type_0, strides = input_135_strides_0, weight = model_10_cv1_conv_weight_to_fp16, x = input_133_cast_fp16)[name = tensor<string, []>("input_135_cast_fp16")];
            tensor<fp16, [1, 512, 20, 20]> var_504_cast_fp16 = silu(x = input_135_cast_fp16)[name = tensor<string, []>("op_504_cast_fp16")];
            tensor<int32, [2]> var_505 = const()[name = tensor<string, []>("op_505"), val = tensor<int32, [2]>([256, 256])];
            tensor<int32, []> var_506_axis_0 = const()[name = tensor<string, []>("op_506_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 256, 20, 20]> var_506_cast_fp16_0, tensor<fp16, [1, 256, 20, 20]> var_506_cast_fp16_1 = split(axis = var_506_axis_0, split_sizes = var_505, x = var_504_cast_fp16)[name = tensor<string, []>("op_506_cast_fp16")];
            tensor<string, []> qkv_1_pad_type_0 = const()[name = tensor<string, []>("qkv_1_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> qkv_1_strides_0 = const()[name = tensor<string, []>("qkv_1_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> qkv_1_pad_0 = const()[name = tensor<string, []>("qkv_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> qkv_1_dilations_0 = const()[name = tensor<string, []>("qkv_1_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> qkv_1_groups_0 = const()[name = tensor<string, []>("qkv_1_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [512, 256, 1, 1]> model_10_m_0_attn_qkv_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_10_m_0_attn_qkv_conv_weight_to_fp16"), val = tensor<fp16, [512, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9420672)))];
            tensor<fp16, [512]> model_10_m_0_attn_qkv_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_10_m_0_attn_qkv_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9682880)))];
            tensor<fp16, [1, 512, 20, 20]> qkv_1_cast_fp16 = conv(bias = model_10_m_0_attn_qkv_conv_bias_to_fp16, dilations = qkv_1_dilations_0, groups = qkv_1_groups_0, pad = qkv_1_pad_0, pad_type = qkv_1_pad_type_0, strides = qkv_1_strides_0, weight = model_10_m_0_attn_qkv_conv_weight_to_fp16, x = var_506_cast_fp16_1)[name = tensor<string, []>("qkv_1_cast_fp16")];
            tensor<int32, [4]> var_531 = const()[name = tensor<string, []>("op_531"), val = tensor<int32, [4]>([1, 4, 128, 400])];
            tensor<fp16, [1, 4, 128, 400]> var_532_cast_fp16 = reshape(shape = var_531, x = qkv_1_cast_fp16)[name = tensor<string, []>("op_532_cast_fp16")];
            tensor<int32, [3]> var_533 = const()[name = tensor<string, []>("op_533"), val = tensor<int32, [3]>([32, 32, 64])];
            tensor<int32, []> var_534_axis_0 = const()[name = tensor<string, []>("op_534_axis_0"), val = tensor<int32, []>(2)];
            tensor<fp16, [1, 4, 32, 400]> var_534_cast_fp16_0, tensor<fp16, [1, 4, 32, 400]> var_534_cast_fp16_1, tensor<fp16, [1, 4, 64, 400]> var_534_cast_fp16_2 = split(axis = var_534_axis_0, split_sizes = var_533, x = var_532_cast_fp16)[name = tensor<string, []>("op_534_cast_fp16")];
            tensor<bool, []> var_539_transpose_x_1 = const()[name = tensor<string, []>("op_539_transpose_x_1"), val = tensor<bool, []>(true)];
            tensor<bool, []> var_539_transpose_y_1 = const()[name = tensor<string, []>("op_539_transpose_y_1"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 4, 400, 400]> var_539_cast_fp16 = matmul(transpose_x = var_539_transpose_x_1, transpose_y = var_539_transpose_y_1, x = var_534_cast_fp16_0, y = var_534_cast_fp16_1)[name = tensor<string, []>("op_539_cast_fp16")];
            tensor<fp16, []> var_540_to_fp16 = const()[name = tensor<string, []>("op_540_to_fp16"), val = tensor<fp16, []>(0x1.6ap-3)];
            tensor<fp16, [1, 4, 400, 400]> attn_1_cast_fp16 = mul(x = var_539_cast_fp16, y = var_540_to_fp16)[name = tensor<string, []>("attn_1_cast_fp16")];
            tensor<fp16, [1, 4, 400, 400]> attn_3_cast_fp16 = softmax(axis = var_486, x = attn_1_cast_fp16)[name = tensor<string, []>("attn_3_cast_fp16")];
            tensor<bool, []> var_544_transpose_x_1 = const()[name = tensor<string, []>("op_544_transpose_x_1"), val = tensor<bool, []>(false)];
            tensor<bool, []> var_544_transpose_y_1 = const()[name = tensor<string, []>("op_544_transpose_y_1"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 4, 64, 400]> var_544_cast_fp16 = matmul(transpose_x = var_544_transpose_x_1, transpose_y = var_544_transpose_y_1, x = var_534_cast_fp16_2, y = attn_3_cast_fp16)[name = tensor<string, []>("op_544_cast_fp16")];
            tensor<int32, [4]> var_545 = const()[name = tensor<string, []>("op_545"), val = tensor<int32, [4]>([1, 256, 20, 20])];
            tensor<fp16, [1, 256, 20, 20]> var_546_cast_fp16 = reshape(shape = var_545, x = var_544_cast_fp16)[name = tensor<string, []>("op_546_cast_fp16")];
            tensor<int32, [4]> var_547 = const()[name = tensor<string, []>("op_547"), val = tensor<int32, [4]>([1, 256, 20, 20])];
            tensor<fp16, [1, 256, 20, 20]> input_137_cast_fp16 = reshape(shape = var_547, x = var_534_cast_fp16_2)[name = tensor<string, []>("input_137_cast_fp16")];
            tensor<string, []> var_556_pad_type_0 = const()[name = tensor<string, []>("op_556_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_556_pad_0 = const()[name = tensor<string, []>("op_556_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, []> var_556_groups_0 = const()[name = tensor<string, []>("op_556_groups_0"), val = tensor<int32, []>(256)];
            tensor<int32, [2]> var_556_strides_0 = const()[name = tensor<string, []>("op_556_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_556_dilations_0 = const()[name = tensor<string, []>("op_556_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [256, 1, 3, 3]> model_10_m_0_attn_pe_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_10_m_0_attn_pe_conv_weight_to_fp16"), val = tensor<fp16, [256, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9683968)))];
            tensor<fp16, [256]> model_10_m_0_attn_pe_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_10_m_0_attn_pe_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9688640)))];
            tensor<fp16, [1, 256, 20, 20]> var_556_cast_fp16 = conv(bias = model_10_m_0_attn_pe_conv_bias_to_fp16, dilations = var_556_dilations_0, groups = var_556_groups_0, pad = var_556_pad_0, pad_type = var_556_pad_type_0, strides = var_556_strides_0, weight = model_10_m_0_attn_pe_conv_weight_to_fp16, x = input_137_cast_fp16)[name = tensor<string, []>("op_556_cast_fp16")];
            tensor<fp16, [1, 256, 20, 20]> input_139_cast_fp16 = add(x = var_546_cast_fp16, y = var_556_cast_fp16)[name = tensor<string, []>("input_139_cast_fp16")];
            tensor<string, []> var_565_pad_type_0 = const()[name = tensor<string, []>("op_565_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_565_strides_0 = const()[name = tensor<string, []>("op_565_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_565_pad_0 = const()[name = tensor<string, []>("op_565_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_565_dilations_0 = const()[name = tensor<string, []>("op_565_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_565_groups_0 = const()[name = tensor<string, []>("op_565_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [256, 256, 1, 1]> model_10_m_0_attn_proj_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_10_m_0_attn_proj_conv_weight_to_fp16"), val = tensor<fp16, [256, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9689216)))];
            tensor<fp16, [256]> model_10_m_0_attn_proj_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_10_m_0_attn_proj_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9820352)))];
            tensor<fp16, [1, 256, 20, 20]> var_565_cast_fp16 = conv(bias = model_10_m_0_attn_proj_conv_bias_to_fp16, dilations = var_565_dilations_0, groups = var_565_groups_0, pad = var_565_pad_0, pad_type = var_565_pad_type_0, strides = var_565_strides_0, weight = model_10_m_0_attn_proj_conv_weight_to_fp16, x = input_139_cast_fp16)[name = tensor<string, []>("op_565_cast_fp16")];
            tensor<fp16, [1, 256, 20, 20]> input_141_cast_fp16 = add(x = var_506_cast_fp16_1, y = var_565_cast_fp16)[name = tensor<string, []>("input_141_cast_fp16")];
            tensor<string, []> input_143_pad_type_0 = const()[name = tensor<string, []>("input_143_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_143_strides_0 = const()[name = tensor<string, []>("input_143_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_143_pad_0 = const()[name = tensor<string, []>("input_143_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_143_dilations_0 = const()[name = tensor<string, []>("input_143_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_143_groups_0 = const()[name = tensor<string, []>("input_143_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [512, 256, 1, 1]> model_10_m_0_ffn_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_10_m_0_ffn_0_conv_weight_to_fp16"), val = tensor<fp16, [512, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9820928)))];
            tensor<fp16, [512]> model_10_m_0_ffn_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_10_m_0_ffn_0_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10083136)))];
            tensor<fp16, [1, 512, 20, 20]> input_143_cast_fp16 = conv(bias = model_10_m_0_ffn_0_conv_bias_to_fp16, dilations = input_143_dilations_0, groups = input_143_groups_0, pad = input_143_pad_0, pad_type = input_143_pad_type_0, strides = input_143_strides_0, weight = model_10_m_0_ffn_0_conv_weight_to_fp16, x = input_141_cast_fp16)[name = tensor<string, []>("input_143_cast_fp16")];
            tensor<fp16, [1, 512, 20, 20]> input_145_cast_fp16 = silu(x = input_143_cast_fp16)[name = tensor<string, []>("input_145_cast_fp16")];
            tensor<string, []> var_585_pad_type_0 = const()[name = tensor<string, []>("op_585_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_585_strides_0 = const()[name = tensor<string, []>("op_585_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_585_pad_0 = const()[name = tensor<string, []>("op_585_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_585_dilations_0 = const()[name = tensor<string, []>("op_585_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_585_groups_0 = const()[name = tensor<string, []>("op_585_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [256, 512, 1, 1]> model_10_m_0_ffn_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_10_m_0_ffn_1_conv_weight_to_fp16"), val = tensor<fp16, [256, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10084224)))];
            tensor<fp16, [256]> model_10_m_0_ffn_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_10_m_0_ffn_1_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10346432)))];
            tensor<fp16, [1, 256, 20, 20]> var_585_cast_fp16 = conv(bias = model_10_m_0_ffn_1_conv_bias_to_fp16, dilations = var_585_dilations_0, groups = var_585_groups_0, pad = var_585_pad_0, pad_type = var_585_pad_type_0, strides = var_585_strides_0, weight = model_10_m_0_ffn_1_conv_weight_to_fp16, x = input_145_cast_fp16)[name = tensor<string, []>("op_585_cast_fp16")];
            tensor<fp16, [1, 256, 20, 20]> b_1_cast_fp16 = add(x = input_141_cast_fp16, y = var_585_cast_fp16)[name = tensor<string, []>("b_1_cast_fp16")];
            tensor<bool, []> input_147_interleave_0 = const()[name = tensor<string, []>("input_147_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 20, 20]> input_147_cast_fp16 = concat(axis = var_492, interleave = input_147_interleave_0, values = (var_506_cast_fp16_0, b_1_cast_fp16))[name = tensor<string, []>("input_147_cast_fp16")];
            tensor<string, []> input_149_pad_type_0 = const()[name = tensor<string, []>("input_149_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_149_strides_0 = const()[name = tensor<string, []>("input_149_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_149_pad_0 = const()[name = tensor<string, []>("input_149_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_149_dilations_0 = const()[name = tensor<string, []>("input_149_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_149_groups_0 = const()[name = tensor<string, []>("input_149_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [512, 512, 1, 1]> model_10_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_10_cv2_conv_weight_to_fp16"), val = tensor<fp16, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10347008)))];
            tensor<fp16, [512]> model_10_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_10_cv2_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10871360)))];
            tensor<fp16, [1, 512, 20, 20]> input_149_cast_fp16 = conv(bias = model_10_cv2_conv_bias_to_fp16, dilations = input_149_dilations_0, groups = input_149_groups_0, pad = input_149_pad_0, pad_type = input_149_pad_type_0, strides = input_149_strides_0, weight = model_10_cv2_conv_weight_to_fp16, x = input_147_cast_fp16)[name = tensor<string, []>("input_149_cast_fp16")];
            tensor<fp16, [1, 512, 20, 20]> input_151_cast_fp16 = silu(x = input_149_cast_fp16)[name = tensor<string, []>("input_151_cast_fp16")];
            tensor<fp32, []> var_601_scale_factor_height_0 = const()[name = tensor<string, []>("op_601_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> var_601_scale_factor_width_0 = const()[name = tensor<string, []>("op_601_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [1, 512, 40, 40]> var_601_cast_fp16 = upsample_nearest_neighbor(scale_factor_height = var_601_scale_factor_height_0, scale_factor_width = var_601_scale_factor_width_0, x = input_151_cast_fp16)[name = tensor<string, []>("op_601_cast_fp16")];
            tensor<int32, []> var_602 = const()[name = tensor<string, []>("op_602"), val = tensor<int32, []>(1)];
            tensor<bool, []> input_153_interleave_0 = const()[name = tensor<string, []>("input_153_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 768, 40, 40]> input_153_cast_fp16 = concat(axis = var_602, interleave = input_153_interleave_0, values = (var_601_cast_fp16, input_81_cast_fp16))[name = tensor<string, []>("input_153_cast_fp16")];
            tensor<int32, []> var_609 = const()[name = tensor<string, []>("op_609"), val = tensor<int32, []>(1)];
            tensor<string, []> input_155_pad_type_0 = const()[name = tensor<string, []>("input_155_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_155_strides_0 = const()[name = tensor<string, []>("input_155_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_155_pad_0 = const()[name = tensor<string, []>("input_155_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_155_dilations_0 = const()[name = tensor<string, []>("input_155_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_155_groups_0 = const()[name = tensor<string, []>("input_155_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [256, 768, 1, 1]> model_13_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_13_cv1_conv_weight_to_fp16"), val = tensor<fp16, [256, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10872448)))];
            tensor<fp16, [256]> model_13_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_13_cv1_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11265728)))];
            tensor<fp16, [1, 256, 40, 40]> input_155_cast_fp16 = conv(bias = model_13_cv1_conv_bias_to_fp16, dilations = input_155_dilations_0, groups = input_155_groups_0, pad = input_155_pad_0, pad_type = input_155_pad_type_0, strides = input_155_strides_0, weight = model_13_cv1_conv_weight_to_fp16, x = input_153_cast_fp16)[name = tensor<string, []>("input_155_cast_fp16")];
            tensor<fp16, [1, 256, 40, 40]> var_622_cast_fp16 = silu(x = input_155_cast_fp16)[name = tensor<string, []>("op_622_cast_fp16")];
            tensor<int32, [2]> var_623 = const()[name = tensor<string, []>("op_623"), val = tensor<int32, [2]>([128, 128])];
            tensor<int32, []> var_624_axis_0 = const()[name = tensor<string, []>("op_624_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 128, 40, 40]> var_624_cast_fp16_0, tensor<fp16, [1, 128, 40, 40]> var_624_cast_fp16_1 = split(axis = var_624_axis_0, split_sizes = var_623, x = var_622_cast_fp16)[name = tensor<string, []>("op_624_cast_fp16")];
            tensor<string, []> input_159_pad_type_0 = const()[name = tensor<string, []>("input_159_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_159_pad_0 = const()[name = tensor<string, []>("input_159_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_159_strides_0 = const()[name = tensor<string, []>("input_159_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_159_dilations_0 = const()[name = tensor<string, []>("input_159_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_159_groups_0 = const()[name = tensor<string, []>("input_159_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 128, 3, 3]> model_13_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_13_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11266304)))];
            tensor<fp16, [64]> model_13_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_13_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11413824)))];
            tensor<fp16, [1, 64, 40, 40]> input_159_cast_fp16 = conv(bias = model_13_m_0_cv1_conv_bias_to_fp16, dilations = input_159_dilations_0, groups = input_159_groups_0, pad = input_159_pad_0, pad_type = input_159_pad_type_0, strides = input_159_strides_0, weight = model_13_m_0_cv1_conv_weight_to_fp16, x = var_624_cast_fp16_1)[name = tensor<string, []>("input_159_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> input_161_cast_fp16 = silu(x = input_159_cast_fp16)[name = tensor<string, []>("input_161_cast_fp16")];
            tensor<string, []> input_163_pad_type_0 = const()[name = tensor<string, []>("input_163_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_163_pad_0 = const()[name = tensor<string, []>("input_163_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_163_strides_0 = const()[name = tensor<string, []>("input_163_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_163_dilations_0 = const()[name = tensor<string, []>("input_163_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_163_groups_0 = const()[name = tensor<string, []>("input_163_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 64, 3, 3]> model_13_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_13_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11414016)))];
            tensor<fp16, [128]> model_13_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_13_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11561536)))];
            tensor<fp16, [1, 128, 40, 40]> input_163_cast_fp16 = conv(bias = model_13_m_0_cv2_conv_bias_to_fp16, dilations = input_163_dilations_0, groups = input_163_groups_0, pad = input_163_pad_0, pad_type = input_163_pad_type_0, strides = input_163_strides_0, weight = model_13_m_0_cv2_conv_weight_to_fp16, x = input_161_cast_fp16)[name = tensor<string, []>("input_163_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> var_646_cast_fp16 = silu(x = input_163_cast_fp16)[name = tensor<string, []>("op_646_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> var_647_cast_fp16 = add(x = var_624_cast_fp16_1, y = var_646_cast_fp16)[name = tensor<string, []>("op_647_cast_fp16")];
            tensor<bool, []> input_165_interleave_0 = const()[name = tensor<string, []>("input_165_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 40, 40]> input_165_cast_fp16 = concat(axis = var_609, interleave = input_165_interleave_0, values = (var_624_cast_fp16_0, var_624_cast_fp16_1, var_647_cast_fp16))[name = tensor<string, []>("input_165_cast_fp16")];
            tensor<string, []> input_167_pad_type_0 = const()[name = tensor<string, []>("input_167_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_167_strides_0 = const()[name = tensor<string, []>("input_167_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_167_pad_0 = const()[name = tensor<string, []>("input_167_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_167_dilations_0 = const()[name = tensor<string, []>("input_167_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_167_groups_0 = const()[name = tensor<string, []>("input_167_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [256, 384, 1, 1]> model_13_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_13_cv2_conv_weight_to_fp16"), val = tensor<fp16, [256, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11561856)))];
            tensor<fp16, [256]> model_13_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_13_cv2_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11758528)))];
            tensor<fp16, [1, 256, 40, 40]> input_167_cast_fp16 = conv(bias = model_13_cv2_conv_bias_to_fp16, dilations = input_167_dilations_0, groups = input_167_groups_0, pad = input_167_pad_0, pad_type = input_167_pad_type_0, strides = input_167_strides_0, weight = model_13_cv2_conv_weight_to_fp16, x = input_165_cast_fp16)[name = tensor<string, []>("input_167_cast_fp16")];
            tensor<fp16, [1, 256, 40, 40]> input_169_cast_fp16 = silu(x = input_167_cast_fp16)[name = tensor<string, []>("input_169_cast_fp16")];
            tensor<fp32, []> var_662_scale_factor_height_0 = const()[name = tensor<string, []>("op_662_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> var_662_scale_factor_width_0 = const()[name = tensor<string, []>("op_662_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [1, 256, 80, 80]> var_662_cast_fp16 = upsample_nearest_neighbor(scale_factor_height = var_662_scale_factor_height_0, scale_factor_width = var_662_scale_factor_width_0, x = input_169_cast_fp16)[name = tensor<string, []>("op_662_cast_fp16")];
            tensor<int32, []> var_663 = const()[name = tensor<string, []>("op_663"), val = tensor<int32, []>(1)];
            tensor<bool, []> input_171_interleave_0 = const()[name = tensor<string, []>("input_171_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 80, 80]> input_171_cast_fp16 = concat(axis = var_663, interleave = input_171_interleave_0, values = (var_662_cast_fp16, input_43_cast_fp16))[name = tensor<string, []>("input_171_cast_fp16")];
            tensor<int32, []> var_670 = const()[name = tensor<string, []>("op_670"), val = tensor<int32, []>(1)];
            tensor<string, []> input_173_pad_type_0 = const()[name = tensor<string, []>("input_173_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_173_strides_0 = const()[name = tensor<string, []>("input_173_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_173_pad_0 = const()[name = tensor<string, []>("input_173_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_173_dilations_0 = const()[name = tensor<string, []>("input_173_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_173_groups_0 = const()[name = tensor<string, []>("input_173_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 512, 1, 1]> model_16_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_16_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11759104)))];
            tensor<fp16, [128]> model_16_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_16_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11890240)))];
            tensor<fp16, [1, 128, 80, 80]> input_173_cast_fp16 = conv(bias = model_16_cv1_conv_bias_to_fp16, dilations = input_173_dilations_0, groups = input_173_groups_0, pad = input_173_pad_0, pad_type = input_173_pad_type_0, strides = input_173_strides_0, weight = model_16_cv1_conv_weight_to_fp16, x = input_171_cast_fp16)[name = tensor<string, []>("input_173_cast_fp16")];
            tensor<fp16, [1, 128, 80, 80]> var_683_cast_fp16 = silu(x = input_173_cast_fp16)[name = tensor<string, []>("op_683_cast_fp16")];
            tensor<int32, [2]> var_684 = const()[name = tensor<string, []>("op_684"), val = tensor<int32, [2]>([64, 64])];
            tensor<int32, []> var_685_axis_0 = const()[name = tensor<string, []>("op_685_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 80, 80]> var_685_cast_fp16_0, tensor<fp16, [1, 64, 80, 80]> var_685_cast_fp16_1 = split(axis = var_685_axis_0, split_sizes = var_684, x = var_683_cast_fp16)[name = tensor<string, []>("op_685_cast_fp16")];
            tensor<string, []> input_177_pad_type_0 = const()[name = tensor<string, []>("input_177_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_177_pad_0 = const()[name = tensor<string, []>("input_177_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_177_strides_0 = const()[name = tensor<string, []>("input_177_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_177_dilations_0 = const()[name = tensor<string, []>("input_177_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_177_groups_0 = const()[name = tensor<string, []>("input_177_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [32, 64, 3, 3]> model_16_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_16_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [32, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11890560)))];
            tensor<fp16, [32]> model_16_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_16_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11927488)))];
            tensor<fp16, [1, 32, 80, 80]> input_177_cast_fp16 = conv(bias = model_16_m_0_cv1_conv_bias_to_fp16, dilations = input_177_dilations_0, groups = input_177_groups_0, pad = input_177_pad_0, pad_type = input_177_pad_type_0, strides = input_177_strides_0, weight = model_16_m_0_cv1_conv_weight_to_fp16, x = var_685_cast_fp16_1)[name = tensor<string, []>("input_177_cast_fp16")];
            tensor<fp16, [1, 32, 80, 80]> input_179_cast_fp16 = silu(x = input_177_cast_fp16)[name = tensor<string, []>("input_179_cast_fp16")];
            tensor<string, []> input_181_pad_type_0 = const()[name = tensor<string, []>("input_181_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_181_pad_0 = const()[name = tensor<string, []>("input_181_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_181_strides_0 = const()[name = tensor<string, []>("input_181_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_181_dilations_0 = const()[name = tensor<string, []>("input_181_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_181_groups_0 = const()[name = tensor<string, []>("input_181_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 32, 3, 3]> model_16_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_16_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11927616)))];
            tensor<fp16, [64]> model_16_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_16_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11964544)))];
            tensor<fp16, [1, 64, 80, 80]> input_181_cast_fp16 = conv(bias = model_16_m_0_cv2_conv_bias_to_fp16, dilations = input_181_dilations_0, groups = input_181_groups_0, pad = input_181_pad_0, pad_type = input_181_pad_type_0, strides = input_181_strides_0, weight = model_16_m_0_cv2_conv_weight_to_fp16, x = input_179_cast_fp16)[name = tensor<string, []>("input_181_cast_fp16")];
            tensor<fp16, [1, 64, 80, 80]> var_707_cast_fp16 = silu(x = input_181_cast_fp16)[name = tensor<string, []>("op_707_cast_fp16")];
            tensor<fp16, [1, 64, 80, 80]> var_708_cast_fp16 = add(x = var_685_cast_fp16_1, y = var_707_cast_fp16)[name = tensor<string, []>("op_708_cast_fp16")];
            tensor<bool, []> input_183_interleave_0 = const()[name = tensor<string, []>("input_183_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 192, 80, 80]> input_183_cast_fp16 = concat(axis = var_670, interleave = input_183_interleave_0, values = (var_685_cast_fp16_0, var_685_cast_fp16_1, var_708_cast_fp16))[name = tensor<string, []>("input_183_cast_fp16")];
            tensor<string, []> input_185_pad_type_0 = const()[name = tensor<string, []>("input_185_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_185_strides_0 = const()[name = tensor<string, []>("input_185_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_185_pad_0 = const()[name = tensor<string, []>("input_185_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_185_dilations_0 = const()[name = tensor<string, []>("input_185_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_185_groups_0 = const()[name = tensor<string, []>("input_185_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 192, 1, 1]> model_16_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_16_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 192, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11964736)))];
            tensor<fp16, [128]> model_16_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_16_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12013952)))];
            tensor<fp16, [1, 128, 80, 80]> input_185_cast_fp16 = conv(bias = model_16_cv2_conv_bias_to_fp16, dilations = input_185_dilations_0, groups = input_185_groups_0, pad = input_185_pad_0, pad_type = input_185_pad_type_0, strides = input_185_strides_0, weight = model_16_cv2_conv_weight_to_fp16, x = input_183_cast_fp16)[name = tensor<string, []>("input_185_cast_fp16")];
            tensor<fp16, [1, 128, 80, 80]> input_187_cast_fp16 = silu(x = input_185_cast_fp16)[name = tensor<string, []>("input_187_cast_fp16")];
            tensor<string, []> input_189_pad_type_0 = const()[name = tensor<string, []>("input_189_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_189_pad_0 = const()[name = tensor<string, []>("input_189_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_189_strides_0 = const()[name = tensor<string, []>("input_189_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> input_189_dilations_0 = const()[name = tensor<string, []>("input_189_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_189_groups_0 = const()[name = tensor<string, []>("input_189_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 128, 3, 3]> model_17_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_17_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12014272)))];
            tensor<fp16, [128]> model_17_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_17_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12309248)))];
            tensor<fp16, [1, 128, 40, 40]> input_189_cast_fp16 = conv(bias = model_17_conv_bias_to_fp16, dilations = input_189_dilations_0, groups = input_189_groups_0, pad = input_189_pad_0, pad_type = input_189_pad_type_0, strides = input_189_strides_0, weight = model_17_conv_weight_to_fp16, x = input_187_cast_fp16)[name = tensor<string, []>("input_189_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> var_733_cast_fp16 = silu(x = input_189_cast_fp16)[name = tensor<string, []>("op_733_cast_fp16")];
            tensor<int32, []> var_734 = const()[name = tensor<string, []>("op_734"), val = tensor<int32, []>(1)];
            tensor<bool, []> input_191_interleave_0 = const()[name = tensor<string, []>("input_191_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 40, 40]> input_191_cast_fp16 = concat(axis = var_734, interleave = input_191_interleave_0, values = (var_733_cast_fp16, input_169_cast_fp16))[name = tensor<string, []>("input_191_cast_fp16")];
            tensor<int32, []> var_741 = const()[name = tensor<string, []>("op_741"), val = tensor<int32, []>(1)];
            tensor<string, []> input_193_pad_type_0 = const()[name = tensor<string, []>("input_193_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_193_strides_0 = const()[name = tensor<string, []>("input_193_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_193_pad_0 = const()[name = tensor<string, []>("input_193_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_193_dilations_0 = const()[name = tensor<string, []>("input_193_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_193_groups_0 = const()[name = tensor<string, []>("input_193_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [256, 384, 1, 1]> model_19_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_19_cv1_conv_weight_to_fp16"), val = tensor<fp16, [256, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12309568)))];
            tensor<fp16, [256]> model_19_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_19_cv1_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12506240)))];
            tensor<fp16, [1, 256, 40, 40]> input_193_cast_fp16 = conv(bias = model_19_cv1_conv_bias_to_fp16, dilations = input_193_dilations_0, groups = input_193_groups_0, pad = input_193_pad_0, pad_type = input_193_pad_type_0, strides = input_193_strides_0, weight = model_19_cv1_conv_weight_to_fp16, x = input_191_cast_fp16)[name = tensor<string, []>("input_193_cast_fp16")];
            tensor<fp16, [1, 256, 40, 40]> var_754_cast_fp16 = silu(x = input_193_cast_fp16)[name = tensor<string, []>("op_754_cast_fp16")];
            tensor<int32, [2]> var_755 = const()[name = tensor<string, []>("op_755"), val = tensor<int32, [2]>([128, 128])];
            tensor<int32, []> var_756_axis_0 = const()[name = tensor<string, []>("op_756_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 128, 40, 40]> var_756_cast_fp16_0, tensor<fp16, [1, 128, 40, 40]> var_756_cast_fp16_1 = split(axis = var_756_axis_0, split_sizes = var_755, x = var_754_cast_fp16)[name = tensor<string, []>("op_756_cast_fp16")];
            tensor<string, []> input_197_pad_type_0 = const()[name = tensor<string, []>("input_197_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_197_pad_0 = const()[name = tensor<string, []>("input_197_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_197_strides_0 = const()[name = tensor<string, []>("input_197_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_197_dilations_0 = const()[name = tensor<string, []>("input_197_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_197_groups_0 = const()[name = tensor<string, []>("input_197_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 128, 3, 3]> model_19_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_19_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12506816)))];
            tensor<fp16, [64]> model_19_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_19_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12654336)))];
            tensor<fp16, [1, 64, 40, 40]> input_197_cast_fp16 = conv(bias = model_19_m_0_cv1_conv_bias_to_fp16, dilations = input_197_dilations_0, groups = input_197_groups_0, pad = input_197_pad_0, pad_type = input_197_pad_type_0, strides = input_197_strides_0, weight = model_19_m_0_cv1_conv_weight_to_fp16, x = var_756_cast_fp16_1)[name = tensor<string, []>("input_197_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> input_199_cast_fp16 = silu(x = input_197_cast_fp16)[name = tensor<string, []>("input_199_cast_fp16")];
            tensor<string, []> input_201_pad_type_0 = const()[name = tensor<string, []>("input_201_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_201_pad_0 = const()[name = tensor<string, []>("input_201_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_201_strides_0 = const()[name = tensor<string, []>("input_201_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_201_dilations_0 = const()[name = tensor<string, []>("input_201_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_201_groups_0 = const()[name = tensor<string, []>("input_201_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 64, 3, 3]> model_19_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_19_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12654528)))];
            tensor<fp16, [128]> model_19_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_19_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12802048)))];
            tensor<fp16, [1, 128, 40, 40]> input_201_cast_fp16 = conv(bias = model_19_m_0_cv2_conv_bias_to_fp16, dilations = input_201_dilations_0, groups = input_201_groups_0, pad = input_201_pad_0, pad_type = input_201_pad_type_0, strides = input_201_strides_0, weight = model_19_m_0_cv2_conv_weight_to_fp16, x = input_199_cast_fp16)[name = tensor<string, []>("input_201_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> var_778_cast_fp16 = silu(x = input_201_cast_fp16)[name = tensor<string, []>("op_778_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> var_779_cast_fp16 = add(x = var_756_cast_fp16_1, y = var_778_cast_fp16)[name = tensor<string, []>("op_779_cast_fp16")];
            tensor<bool, []> input_203_interleave_0 = const()[name = tensor<string, []>("input_203_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 40, 40]> input_203_cast_fp16 = concat(axis = var_741, interleave = input_203_interleave_0, values = (var_756_cast_fp16_0, var_756_cast_fp16_1, var_779_cast_fp16))[name = tensor<string, []>("input_203_cast_fp16")];
            tensor<string, []> input_205_pad_type_0 = const()[name = tensor<string, []>("input_205_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_205_strides_0 = const()[name = tensor<string, []>("input_205_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_205_pad_0 = const()[name = tensor<string, []>("input_205_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_205_dilations_0 = const()[name = tensor<string, []>("input_205_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_205_groups_0 = const()[name = tensor<string, []>("input_205_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [256, 384, 1, 1]> model_19_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_19_cv2_conv_weight_to_fp16"), val = tensor<fp16, [256, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12802368)))];
            tensor<fp16, [256]> model_19_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_19_cv2_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12999040)))];
            tensor<fp16, [1, 256, 40, 40]> input_205_cast_fp16 = conv(bias = model_19_cv2_conv_bias_to_fp16, dilations = input_205_dilations_0, groups = input_205_groups_0, pad = input_205_pad_0, pad_type = input_205_pad_type_0, strides = input_205_strides_0, weight = model_19_cv2_conv_weight_to_fp16, x = input_203_cast_fp16)[name = tensor<string, []>("input_205_cast_fp16")];
            tensor<fp16, [1, 256, 40, 40]> input_207_cast_fp16 = silu(x = input_205_cast_fp16)[name = tensor<string, []>("input_207_cast_fp16")];
            tensor<string, []> input_209_pad_type_0 = const()[name = tensor<string, []>("input_209_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_209_pad_0 = const()[name = tensor<string, []>("input_209_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_209_strides_0 = const()[name = tensor<string, []>("input_209_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> input_209_dilations_0 = const()[name = tensor<string, []>("input_209_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_209_groups_0 = const()[name = tensor<string, []>("input_209_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [256, 256, 3, 3]> model_20_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_20_conv_weight_to_fp16"), val = tensor<fp16, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12999616)))];
            tensor<fp16, [256]> model_20_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_20_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14179328)))];
            tensor<fp16, [1, 256, 20, 20]> input_209_cast_fp16 = conv(bias = model_20_conv_bias_to_fp16, dilations = input_209_dilations_0, groups = input_209_groups_0, pad = input_209_pad_0, pad_type = input_209_pad_type_0, strides = input_209_strides_0, weight = model_20_conv_weight_to_fp16, x = input_207_cast_fp16)[name = tensor<string, []>("input_209_cast_fp16")];
            tensor<fp16, [1, 256, 20, 20]> var_804_cast_fp16 = silu(x = input_209_cast_fp16)[name = tensor<string, []>("op_804_cast_fp16")];
            tensor<int32, []> var_805 = const()[name = tensor<string, []>("op_805"), val = tensor<int32, []>(1)];
            tensor<bool, []> input_211_interleave_0 = const()[name = tensor<string, []>("input_211_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 768, 20, 20]> input_211_cast_fp16 = concat(axis = var_805, interleave = input_211_interleave_0, values = (var_804_cast_fp16, input_151_cast_fp16))[name = tensor<string, []>("input_211_cast_fp16")];
            tensor<int32, []> var_812 = const()[name = tensor<string, []>("op_812"), val = tensor<int32, []>(1)];
            tensor<string, []> input_213_pad_type_0 = const()[name = tensor<string, []>("input_213_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_213_strides_0 = const()[name = tensor<string, []>("input_213_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_213_pad_0 = const()[name = tensor<string, []>("input_213_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_213_dilations_0 = const()[name = tensor<string, []>("input_213_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_213_groups_0 = const()[name = tensor<string, []>("input_213_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [512, 768, 1, 1]> model_22_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv1_conv_weight_to_fp16"), val = tensor<fp16, [512, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14179904)))];
            tensor<fp16, [512]> model_22_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv1_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14966400)))];
            tensor<fp16, [1, 512, 20, 20]> input_213_cast_fp16 = conv(bias = model_22_cv1_conv_bias_to_fp16, dilations = input_213_dilations_0, groups = input_213_groups_0, pad = input_213_pad_0, pad_type = input_213_pad_type_0, strides = input_213_strides_0, weight = model_22_cv1_conv_weight_to_fp16, x = input_211_cast_fp16)[name = tensor<string, []>("input_213_cast_fp16")];
            tensor<fp16, [1, 512, 20, 20]> var_825_cast_fp16 = silu(x = input_213_cast_fp16)[name = tensor<string, []>("op_825_cast_fp16")];
            tensor<int32, [2]> var_826 = const()[name = tensor<string, []>("op_826"), val = tensor<int32, [2]>([256, 256])];
            tensor<int32, []> var_827_axis_0 = const()[name = tensor<string, []>("op_827_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 256, 20, 20]> var_827_cast_fp16_0, tensor<fp16, [1, 256, 20, 20]> var_827_cast_fp16_1 = split(axis = var_827_axis_0, split_sizes = var_826, x = var_825_cast_fp16)[name = tensor<string, []>("op_827_cast_fp16")];
            tensor<string, []> input_217_pad_type_0 = const()[name = tensor<string, []>("input_217_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_217_strides_0 = const()[name = tensor<string, []>("input_217_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_217_pad_0 = const()[name = tensor<string, []>("input_217_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_217_dilations_0 = const()[name = tensor<string, []>("input_217_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_217_groups_0 = const()[name = tensor<string, []>("input_217_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 256, 1, 1]> model_22_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14967488)))];
            tensor<fp16, [128]> model_22_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(15033088)))];
            tensor<fp16, [1, 128, 20, 20]> input_217_cast_fp16 = conv(bias = model_22_m_0_cv1_conv_bias_to_fp16, dilations = input_217_dilations_0, groups = input_217_groups_0, pad = input_217_pad_0, pad_type = input_217_pad_type_0, strides = input_217_strides_0, weight = model_22_m_0_cv1_conv_weight_to_fp16, x = var_827_cast_fp16_1)[name = tensor<string, []>("input_217_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> input_219_cast_fp16 = silu(x = input_217_cast_fp16)[name = tensor<string, []>("input_219_cast_fp16")];
            tensor<string, []> input_221_pad_type_0 = const()[name = tensor<string, []>("input_221_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_221_pad_0 = const()[name = tensor<string, []>("input_221_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_221_strides_0 = const()[name = tensor<string, []>("input_221_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_221_dilations_0 = const()[name = tensor<string, []>("input_221_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_221_groups_0 = const()[name = tensor<string, []>("input_221_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 128, 3, 3]> model_22_m_0_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_m_0_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(15033408)))];
            tensor<fp16, [128]> model_22_m_0_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_m_0_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(15328384)))];
            tensor<fp16, [1, 128, 20, 20]> input_221_cast_fp16 = conv(bias = model_22_m_0_m_0_cv1_conv_bias_to_fp16, dilations = input_221_dilations_0, groups = input_221_groups_0, pad = input_221_pad_0, pad_type = input_221_pad_type_0, strides = input_221_strides_0, weight = model_22_m_0_m_0_cv1_conv_weight_to_fp16, x = input_219_cast_fp16)[name = tensor<string, []>("input_221_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> input_223_cast_fp16 = silu(x = input_221_cast_fp16)[name = tensor<string, []>("input_223_cast_fp16")];
            tensor<string, []> input_225_pad_type_0 = const()[name = tensor<string, []>("input_225_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_225_pad_0 = const()[name = tensor<string, []>("input_225_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_225_strides_0 = const()[name = tensor<string, []>("input_225_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_225_dilations_0 = const()[name = tensor<string, []>("input_225_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_225_groups_0 = const()[name = tensor<string, []>("input_225_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 128, 3, 3]> model_22_m_0_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_m_0_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(15328704)))];
            tensor<fp16, [128]> model_22_m_0_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_m_0_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(15623680)))];
            tensor<fp16, [1, 128, 20, 20]> input_225_cast_fp16 = conv(bias = model_22_m_0_m_0_cv2_conv_bias_to_fp16, dilations = input_225_dilations_0, groups = input_225_groups_0, pad = input_225_pad_0, pad_type = input_225_pad_type_0, strides = input_225_strides_0, weight = model_22_m_0_m_0_cv2_conv_weight_to_fp16, x = input_223_cast_fp16)[name = tensor<string, []>("input_225_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> var_864_cast_fp16 = silu(x = input_225_cast_fp16)[name = tensor<string, []>("op_864_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> input_227_cast_fp16 = add(x = input_219_cast_fp16, y = var_864_cast_fp16)[name = tensor<string, []>("input_227_cast_fp16")];
            tensor<string, []> input_229_pad_type_0 = const()[name = tensor<string, []>("input_229_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_229_pad_0 = const()[name = tensor<string, []>("input_229_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_229_strides_0 = const()[name = tensor<string, []>("input_229_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_229_dilations_0 = const()[name = tensor<string, []>("input_229_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_229_groups_0 = const()[name = tensor<string, []>("input_229_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 128, 3, 3]> model_22_m_0_m_1_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_m_0_m_1_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(15624000)))];
            tensor<fp16, [128]> model_22_m_0_m_1_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_m_0_m_1_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(15918976)))];
            tensor<fp16, [1, 128, 20, 20]> input_229_cast_fp16 = conv(bias = model_22_m_0_m_1_cv1_conv_bias_to_fp16, dilations = input_229_dilations_0, groups = input_229_groups_0, pad = input_229_pad_0, pad_type = input_229_pad_type_0, strides = input_229_strides_0, weight = model_22_m_0_m_1_cv1_conv_weight_to_fp16, x = input_227_cast_fp16)[name = tensor<string, []>("input_229_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> input_231_cast_fp16 = silu(x = input_229_cast_fp16)[name = tensor<string, []>("input_231_cast_fp16")];
            tensor<string, []> input_233_pad_type_0 = const()[name = tensor<string, []>("input_233_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_233_pad_0 = const()[name = tensor<string, []>("input_233_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_233_strides_0 = const()[name = tensor<string, []>("input_233_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_233_dilations_0 = const()[name = tensor<string, []>("input_233_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_233_groups_0 = const()[name = tensor<string, []>("input_233_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 128, 3, 3]> model_22_m_0_m_1_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_m_0_m_1_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(15919296)))];
            tensor<fp16, [128]> model_22_m_0_m_1_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_m_0_m_1_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16214272)))];
            tensor<fp16, [1, 128, 20, 20]> input_233_cast_fp16 = conv(bias = model_22_m_0_m_1_cv2_conv_bias_to_fp16, dilations = input_233_dilations_0, groups = input_233_groups_0, pad = input_233_pad_0, pad_type = input_233_pad_type_0, strides = input_233_strides_0, weight = model_22_m_0_m_1_cv2_conv_weight_to_fp16, x = input_231_cast_fp16)[name = tensor<string, []>("input_233_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> var_885_cast_fp16 = silu(x = input_233_cast_fp16)[name = tensor<string, []>("op_885_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> var_886_cast_fp16 = add(x = input_227_cast_fp16, y = var_885_cast_fp16)[name = tensor<string, []>("op_886_cast_fp16")];
            tensor<string, []> input_235_pad_type_0 = const()[name = tensor<string, []>("input_235_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_235_strides_0 = const()[name = tensor<string, []>("input_235_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_235_pad_0 = const()[name = tensor<string, []>("input_235_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_235_dilations_0 = const()[name = tensor<string, []>("input_235_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_235_groups_0 = const()[name = tensor<string, []>("input_235_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 256, 1, 1]> model_22_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16214592)))];
            tensor<fp16, [128]> model_22_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16280192)))];
            tensor<fp16, [1, 128, 20, 20]> input_235_cast_fp16 = conv(bias = model_22_m_0_cv2_conv_bias_to_fp16, dilations = input_235_dilations_0, groups = input_235_groups_0, pad = input_235_pad_0, pad_type = input_235_pad_type_0, strides = input_235_strides_0, weight = model_22_m_0_cv2_conv_weight_to_fp16, x = var_827_cast_fp16_1)[name = tensor<string, []>("input_235_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> var_895_cast_fp16 = silu(x = input_235_cast_fp16)[name = tensor<string, []>("op_895_cast_fp16")];
            tensor<bool, []> input_237_interleave_0 = const()[name = tensor<string, []>("input_237_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 256, 20, 20]> input_237_cast_fp16 = concat(axis = var_812, interleave = input_237_interleave_0, values = (var_886_cast_fp16, var_895_cast_fp16))[name = tensor<string, []>("input_237_cast_fp16")];
            tensor<string, []> input_239_pad_type_0 = const()[name = tensor<string, []>("input_239_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_239_strides_0 = const()[name = tensor<string, []>("input_239_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_239_pad_0 = const()[name = tensor<string, []>("input_239_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_239_dilations_0 = const()[name = tensor<string, []>("input_239_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_239_groups_0 = const()[name = tensor<string, []>("input_239_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [256, 256, 1, 1]> model_22_m_0_cv3_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_m_0_cv3_conv_weight_to_fp16"), val = tensor<fp16, [256, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16280512)))];
            tensor<fp16, [256]> model_22_m_0_cv3_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_m_0_cv3_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16411648)))];
            tensor<fp16, [1, 256, 20, 20]> input_239_cast_fp16 = conv(bias = model_22_m_0_cv3_conv_bias_to_fp16, dilations = input_239_dilations_0, groups = input_239_groups_0, pad = input_239_pad_0, pad_type = input_239_pad_type_0, strides = input_239_strides_0, weight = model_22_m_0_cv3_conv_weight_to_fp16, x = input_237_cast_fp16)[name = tensor<string, []>("input_239_cast_fp16")];
            tensor<fp16, [1, 256, 20, 20]> var_906_cast_fp16 = silu(x = input_239_cast_fp16)[name = tensor<string, []>("op_906_cast_fp16")];
            tensor<bool, []> input_241_interleave_0 = const()[name = tensor<string, []>("input_241_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 768, 20, 20]> input_241_cast_fp16 = concat(axis = var_812, interleave = input_241_interleave_0, values = (var_827_cast_fp16_0, var_827_cast_fp16_1, var_906_cast_fp16))[name = tensor<string, []>("input_241_cast_fp16")];
            tensor<string, []> input_243_pad_type_0 = const()[name = tensor<string, []>("input_243_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_243_strides_0 = const()[name = tensor<string, []>("input_243_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_243_pad_0 = const()[name = tensor<string, []>("input_243_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_243_dilations_0 = const()[name = tensor<string, []>("input_243_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_243_groups_0 = const()[name = tensor<string, []>("input_243_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [512, 768, 1, 1]> model_22_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_conv_weight_to_fp16"), val = tensor<fp16, [512, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16412224)))];
            tensor<fp16, [512]> model_22_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17198720)))];
            tensor<fp16, [1, 512, 20, 20]> input_243_cast_fp16 = conv(bias = model_22_cv2_conv_bias_to_fp16, dilations = input_243_dilations_0, groups = input_243_groups_0, pad = input_243_pad_0, pad_type = input_243_pad_type_0, strides = input_243_strides_0, weight = model_22_cv2_conv_weight_to_fp16, x = input_241_cast_fp16)[name = tensor<string, []>("input_243_cast_fp16")];
            tensor<fp16, [1, 512, 20, 20]> input_261_cast_fp16 = silu(x = input_243_cast_fp16)[name = tensor<string, []>("input_261_cast_fp16")];
            tensor<int32, []> var_927 = const()[name = tensor<string, []>("op_927"), val = tensor<int32, []>(2)];
            tensor<int32, []> var_932 = const()[name = tensor<string, []>("op_932"), val = tensor<int32, []>(-1)];
            tensor<int32, []> var_934 = const()[name = tensor<string, []>("op_934"), val = tensor<int32, []>(1)];
            tensor<string, []> input_245_pad_type_0 = const()[name = tensor<string, []>("input_245_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_245_pad_0 = const()[name = tensor<string, []>("input_245_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_245_strides_0 = const()[name = tensor<string, []>("input_245_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_245_dilations_0 = const()[name = tensor<string, []>("input_245_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_245_groups_0 = const()[name = tensor<string, []>("input_245_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [72, 128, 3, 3]> model_23_cv4_0_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv4_0_0_conv_weight_to_fp16"), val = tensor<fp16, [72, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17199808)))];
            tensor<fp16, [72]> model_23_cv4_0_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv4_0_0_conv_bias_to_fp16"), val = tensor<fp16, [72]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17365760)))];
            tensor<fp16, [1, 72, 80, 80]> input_245_cast_fp16 = conv(bias = model_23_cv4_0_0_conv_bias_to_fp16, dilations = input_245_dilations_0, groups = input_245_groups_0, pad = input_245_pad_0, pad_type = input_245_pad_type_0, strides = input_245_strides_0, weight = model_23_cv4_0_0_conv_weight_to_fp16, x = input_187_cast_fp16)[name = tensor<string, []>("input_245_cast_fp16")];
            tensor<fp16, [1, 72, 80, 80]> input_247_cast_fp16 = silu(x = input_245_cast_fp16)[name = tensor<string, []>("input_247_cast_fp16")];
            tensor<string, []> input_249_pad_type_0 = const()[name = tensor<string, []>("input_249_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_249_pad_0 = const()[name = tensor<string, []>("input_249_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_249_strides_0 = const()[name = tensor<string, []>("input_249_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_249_dilations_0 = const()[name = tensor<string, []>("input_249_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_249_groups_0 = const()[name = tensor<string, []>("input_249_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [72, 72, 3, 3]> model_23_cv4_0_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv4_0_1_conv_weight_to_fp16"), val = tensor<fp16, [72, 72, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17366016)))];
            tensor<fp16, [72]> model_23_cv4_0_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv4_0_1_conv_bias_to_fp16"), val = tensor<fp16, [72]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17459392)))];
            tensor<fp16, [1, 72, 80, 80]> input_249_cast_fp16 = conv(bias = model_23_cv4_0_1_conv_bias_to_fp16, dilations = input_249_dilations_0, groups = input_249_groups_0, pad = input_249_pad_0, pad_type = input_249_pad_type_0, strides = input_249_strides_0, weight = model_23_cv4_0_1_conv_weight_to_fp16, x = input_247_cast_fp16)[name = tensor<string, []>("input_249_cast_fp16")];
            tensor<fp16, [1, 72, 80, 80]> input_251_cast_fp16 = silu(x = input_249_cast_fp16)[name = tensor<string, []>("input_251_cast_fp16")];
            tensor<string, []> var_985_pad_type_0 = const()[name = tensor<string, []>("op_985_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_985_strides_0 = const()[name = tensor<string, []>("op_985_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_985_pad_0 = const()[name = tensor<string, []>("op_985_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_985_dilations_0 = const()[name = tensor<string, []>("op_985_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_985_groups_0 = const()[name = tensor<string, []>("op_985_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [72, 72, 1, 1]> model_23_cv4_0_2_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv4_0_2_weight_to_fp16"), val = tensor<fp16, [72, 72, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17459648)))];
            tensor<fp16, [72]> model_23_cv4_0_2_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv4_0_2_bias_to_fp16"), val = tensor<fp16, [72]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17470080)))];
            tensor<fp16, [1, 72, 80, 80]> var_985_cast_fp16 = conv(bias = model_23_cv4_0_2_bias_to_fp16, dilations = var_985_dilations_0, groups = var_985_groups_0, pad = var_985_pad_0, pad_type = var_985_pad_type_0, strides = var_985_strides_0, weight = model_23_cv4_0_2_weight_to_fp16, x = input_251_cast_fp16)[name = tensor<string, []>("op_985_cast_fp16")];
            tensor<int32, [3]> var_986 = const()[name = tensor<string, []>("op_986"), val = tensor<int32, [3]>([1, 72, -1])];
            tensor<fp16, [1, 72, 6400]> var_987_cast_fp16 = reshape(shape = var_986, x = var_985_cast_fp16)[name = tensor<string, []>("op_987_cast_fp16")];
            tensor<string, []> input_253_pad_type_0 = const()[name = tensor<string, []>("input_253_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_253_pad_0 = const()[name = tensor<string, []>("input_253_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_253_strides_0 = const()[name = tensor<string, []>("input_253_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_253_dilations_0 = const()[name = tensor<string, []>("input_253_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_253_groups_0 = const()[name = tensor<string, []>("input_253_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [72, 256, 3, 3]> model_23_cv4_1_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv4_1_0_conv_weight_to_fp16"), val = tensor<fp16, [72, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17470336)))];
            tensor<fp16, [72]> model_23_cv4_1_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv4_1_0_conv_bias_to_fp16"), val = tensor<fp16, [72]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17802176)))];
            tensor<fp16, [1, 72, 40, 40]> input_253_cast_fp16 = conv(bias = model_23_cv4_1_0_conv_bias_to_fp16, dilations = input_253_dilations_0, groups = input_253_groups_0, pad = input_253_pad_0, pad_type = input_253_pad_type_0, strides = input_253_strides_0, weight = model_23_cv4_1_0_conv_weight_to_fp16, x = input_207_cast_fp16)[name = tensor<string, []>("input_253_cast_fp16")];
            tensor<fp16, [1, 72, 40, 40]> input_255_cast_fp16 = silu(x = input_253_cast_fp16)[name = tensor<string, []>("input_255_cast_fp16")];
            tensor<string, []> input_257_pad_type_0 = const()[name = tensor<string, []>("input_257_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_257_pad_0 = const()[name = tensor<string, []>("input_257_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_257_strides_0 = const()[name = tensor<string, []>("input_257_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_257_dilations_0 = const()[name = tensor<string, []>("input_257_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_257_groups_0 = const()[name = tensor<string, []>("input_257_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [72, 72, 3, 3]> model_23_cv4_1_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv4_1_1_conv_weight_to_fp16"), val = tensor<fp16, [72, 72, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17802432)))];
            tensor<fp16, [72]> model_23_cv4_1_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv4_1_1_conv_bias_to_fp16"), val = tensor<fp16, [72]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17895808)))];
            tensor<fp16, [1, 72, 40, 40]> input_257_cast_fp16 = conv(bias = model_23_cv4_1_1_conv_bias_to_fp16, dilations = input_257_dilations_0, groups = input_257_groups_0, pad = input_257_pad_0, pad_type = input_257_pad_type_0, strides = input_257_strides_0, weight = model_23_cv4_1_1_conv_weight_to_fp16, x = input_255_cast_fp16)[name = tensor<string, []>("input_257_cast_fp16")];
            tensor<fp16, [1, 72, 40, 40]> input_259_cast_fp16 = silu(x = input_257_cast_fp16)[name = tensor<string, []>("input_259_cast_fp16")];
            tensor<string, []> var_1015_pad_type_0 = const()[name = tensor<string, []>("op_1015_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1015_strides_0 = const()[name = tensor<string, []>("op_1015_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1015_pad_0 = const()[name = tensor<string, []>("op_1015_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1015_dilations_0 = const()[name = tensor<string, []>("op_1015_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1015_groups_0 = const()[name = tensor<string, []>("op_1015_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [72, 72, 1, 1]> model_23_cv4_1_2_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv4_1_2_weight_to_fp16"), val = tensor<fp16, [72, 72, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17896064)))];
            tensor<fp16, [72]> model_23_cv4_1_2_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv4_1_2_bias_to_fp16"), val = tensor<fp16, [72]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17906496)))];
            tensor<fp16, [1, 72, 40, 40]> var_1015_cast_fp16 = conv(bias = model_23_cv4_1_2_bias_to_fp16, dilations = var_1015_dilations_0, groups = var_1015_groups_0, pad = var_1015_pad_0, pad_type = var_1015_pad_type_0, strides = var_1015_strides_0, weight = model_23_cv4_1_2_weight_to_fp16, x = input_259_cast_fp16)[name = tensor<string, []>("op_1015_cast_fp16")];
            tensor<int32, [3]> var_1016 = const()[name = tensor<string, []>("op_1016"), val = tensor<int32, [3]>([1, 72, -1])];
            tensor<fp16, [1, 72, 1600]> var_1017_cast_fp16 = reshape(shape = var_1016, x = var_1015_cast_fp16)[name = tensor<string, []>("op_1017_cast_fp16")];
            tensor<string, []> input_263_pad_type_0 = const()[name = tensor<string, []>("input_263_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_263_pad_0 = const()[name = tensor<string, []>("input_263_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_263_strides_0 = const()[name = tensor<string, []>("input_263_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_263_dilations_0 = const()[name = tensor<string, []>("input_263_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_263_groups_0 = const()[name = tensor<string, []>("input_263_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [72, 512, 3, 3]> model_23_cv4_2_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv4_2_0_conv_weight_to_fp16"), val = tensor<fp16, [72, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17906752)))];
            tensor<fp16, [72]> model_23_cv4_2_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv4_2_0_conv_bias_to_fp16"), val = tensor<fp16, [72]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18570368)))];
            tensor<fp16, [1, 72, 20, 20]> input_263_cast_fp16 = conv(bias = model_23_cv4_2_0_conv_bias_to_fp16, dilations = input_263_dilations_0, groups = input_263_groups_0, pad = input_263_pad_0, pad_type = input_263_pad_type_0, strides = input_263_strides_0, weight = model_23_cv4_2_0_conv_weight_to_fp16, x = input_261_cast_fp16)[name = tensor<string, []>("input_263_cast_fp16")];
            tensor<fp16, [1, 72, 20, 20]> input_265_cast_fp16 = silu(x = input_263_cast_fp16)[name = tensor<string, []>("input_265_cast_fp16")];
            tensor<string, []> input_267_pad_type_0 = const()[name = tensor<string, []>("input_267_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_267_pad_0 = const()[name = tensor<string, []>("input_267_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_267_strides_0 = const()[name = tensor<string, []>("input_267_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_267_dilations_0 = const()[name = tensor<string, []>("input_267_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_267_groups_0 = const()[name = tensor<string, []>("input_267_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [72, 72, 3, 3]> model_23_cv4_2_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv4_2_1_conv_weight_to_fp16"), val = tensor<fp16, [72, 72, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18570624)))];
            tensor<fp16, [72]> model_23_cv4_2_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv4_2_1_conv_bias_to_fp16"), val = tensor<fp16, [72]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18664000)))];
            tensor<fp16, [1, 72, 20, 20]> input_267_cast_fp16 = conv(bias = model_23_cv4_2_1_conv_bias_to_fp16, dilations = input_267_dilations_0, groups = input_267_groups_0, pad = input_267_pad_0, pad_type = input_267_pad_type_0, strides = input_267_strides_0, weight = model_23_cv4_2_1_conv_weight_to_fp16, x = input_265_cast_fp16)[name = tensor<string, []>("input_267_cast_fp16")];
            tensor<fp16, [1, 72, 20, 20]> input_269_cast_fp16 = silu(x = input_267_cast_fp16)[name = tensor<string, []>("input_269_cast_fp16")];
            tensor<string, []> var_1045_pad_type_0 = const()[name = tensor<string, []>("op_1045_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1045_strides_0 = const()[name = tensor<string, []>("op_1045_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1045_pad_0 = const()[name = tensor<string, []>("op_1045_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1045_dilations_0 = const()[name = tensor<string, []>("op_1045_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1045_groups_0 = const()[name = tensor<string, []>("op_1045_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [72, 72, 1, 1]> model_23_cv4_2_2_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv4_2_2_weight_to_fp16"), val = tensor<fp16, [72, 72, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18664256)))];
            tensor<fp16, [72]> model_23_cv4_2_2_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv4_2_2_bias_to_fp16"), val = tensor<fp16, [72]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18674688)))];
            tensor<fp16, [1, 72, 20, 20]> var_1045_cast_fp16 = conv(bias = model_23_cv4_2_2_bias_to_fp16, dilations = var_1045_dilations_0, groups = var_1045_groups_0, pad = var_1045_pad_0, pad_type = var_1045_pad_type_0, strides = var_1045_strides_0, weight = model_23_cv4_2_2_weight_to_fp16, x = input_269_cast_fp16)[name = tensor<string, []>("op_1045_cast_fp16")];
            tensor<int32, [3]> var_1046 = const()[name = tensor<string, []>("op_1046"), val = tensor<int32, [3]>([1, 72, -1])];
            tensor<fp16, [1, 72, 400]> var_1047_cast_fp16 = reshape(shape = var_1046, x = var_1045_cast_fp16)[name = tensor<string, []>("op_1047_cast_fp16")];
            tensor<bool, []> kpts_interleave_0 = const()[name = tensor<string, []>("kpts_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 72, 8400]> kpts_cast_fp16 = concat(axis = var_932, interleave = kpts_interleave_0, values = (var_987_cast_fp16, var_1017_cast_fp16, var_1047_cast_fp16))[name = tensor<string, []>("kpts_cast_fp16")];
            tensor<string, []> input_271_pad_type_0 = const()[name = tensor<string, []>("input_271_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_271_pad_0 = const()[name = tensor<string, []>("input_271_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_271_strides_0 = const()[name = tensor<string, []>("input_271_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_271_dilations_0 = const()[name = tensor<string, []>("input_271_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_271_groups_0 = const()[name = tensor<string, []>("input_271_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 128, 3, 3]> model_23_cv2_0_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv2_0_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18674944)))];
            tensor<fp16, [64]> model_23_cv2_0_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv2_0_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18822464)))];
            tensor<fp16, [1, 64, 80, 80]> input_271_cast_fp16 = conv(bias = model_23_cv2_0_0_conv_bias_to_fp16, dilations = input_271_dilations_0, groups = input_271_groups_0, pad = input_271_pad_0, pad_type = input_271_pad_type_0, strides = input_271_strides_0, weight = model_23_cv2_0_0_conv_weight_to_fp16, x = input_187_cast_fp16)[name = tensor<string, []>("input_271_cast_fp16")];
            tensor<fp16, [1, 64, 80, 80]> input_273_cast_fp16 = silu(x = input_271_cast_fp16)[name = tensor<string, []>("input_273_cast_fp16")];
            tensor<string, []> input_275_pad_type_0 = const()[name = tensor<string, []>("input_275_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_275_pad_0 = const()[name = tensor<string, []>("input_275_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_275_strides_0 = const()[name = tensor<string, []>("input_275_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_275_dilations_0 = const()[name = tensor<string, []>("input_275_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_275_groups_0 = const()[name = tensor<string, []>("input_275_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 3, 3]> model_23_cv2_0_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv2_0_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18822656)))];
            tensor<fp16, [64]> model_23_cv2_0_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv2_0_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18896448)))];
            tensor<fp16, [1, 64, 80, 80]> input_275_cast_fp16 = conv(bias = model_23_cv2_0_1_conv_bias_to_fp16, dilations = input_275_dilations_0, groups = input_275_groups_0, pad = input_275_pad_0, pad_type = input_275_pad_type_0, strides = input_275_strides_0, weight = model_23_cv2_0_1_conv_weight_to_fp16, x = input_273_cast_fp16)[name = tensor<string, []>("input_275_cast_fp16")];
            tensor<fp16, [1, 64, 80, 80]> input_277_cast_fp16 = silu(x = input_275_cast_fp16)[name = tensor<string, []>("input_277_cast_fp16")];
            tensor<string, []> var_1077_pad_type_0 = const()[name = tensor<string, []>("op_1077_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1077_strides_0 = const()[name = tensor<string, []>("op_1077_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1077_pad_0 = const()[name = tensor<string, []>("op_1077_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1077_dilations_0 = const()[name = tensor<string, []>("op_1077_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1077_groups_0 = const()[name = tensor<string, []>("op_1077_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 1, 1]> model_23_cv2_0_2_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv2_0_2_weight_to_fp16"), val = tensor<fp16, [64, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18896640)))];
            tensor<fp16, [64]> model_23_cv2_0_2_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv2_0_2_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18904896)))];
            tensor<fp16, [1, 64, 80, 80]> var_1077_cast_fp16 = conv(bias = model_23_cv2_0_2_bias_to_fp16, dilations = var_1077_dilations_0, groups = var_1077_groups_0, pad = var_1077_pad_0, pad_type = var_1077_pad_type_0, strides = var_1077_strides_0, weight = model_23_cv2_0_2_weight_to_fp16, x = input_277_cast_fp16)[name = tensor<string, []>("op_1077_cast_fp16")];
            tensor<string, []> input_279_pad_type_0 = const()[name = tensor<string, []>("input_279_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_279_pad_0 = const()[name = tensor<string, []>("input_279_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, []> input_279_groups_0 = const()[name = tensor<string, []>("input_279_groups_0"), val = tensor<int32, []>(128)];
            tensor<int32, [2]> input_279_strides_0 = const()[name = tensor<string, []>("input_279_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_279_dilations_0 = const()[name = tensor<string, []>("input_279_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [128, 1, 3, 3]> model_23_cv3_0_0_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_0_0_0_conv_weight_to_fp16"), val = tensor<fp16, [128, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18905088)))];
            tensor<fp16, [128]> model_23_cv3_0_0_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_0_0_0_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18907456)))];
            tensor<fp16, [1, 128, 80, 80]> input_279_cast_fp16 = conv(bias = model_23_cv3_0_0_0_conv_bias_to_fp16, dilations = input_279_dilations_0, groups = input_279_groups_0, pad = input_279_pad_0, pad_type = input_279_pad_type_0, strides = input_279_strides_0, weight = model_23_cv3_0_0_0_conv_weight_to_fp16, x = input_187_cast_fp16)[name = tensor<string, []>("input_279_cast_fp16")];
            tensor<fp16, [1, 128, 80, 80]> input_281_cast_fp16 = silu(x = input_279_cast_fp16)[name = tensor<string, []>("input_281_cast_fp16")];
            tensor<string, []> input_283_pad_type_0 = const()[name = tensor<string, []>("input_283_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_283_strides_0 = const()[name = tensor<string, []>("input_283_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_283_pad_0 = const()[name = tensor<string, []>("input_283_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_283_dilations_0 = const()[name = tensor<string, []>("input_283_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_283_groups_0 = const()[name = tensor<string, []>("input_283_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 128, 1, 1]> model_23_cv3_0_0_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_0_0_1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18907776)))];
            tensor<fp16, [128]> model_23_cv3_0_0_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_0_0_1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18940608)))];
            tensor<fp16, [1, 128, 80, 80]> input_283_cast_fp16 = conv(bias = model_23_cv3_0_0_1_conv_bias_to_fp16, dilations = input_283_dilations_0, groups = input_283_groups_0, pad = input_283_pad_0, pad_type = input_283_pad_type_0, strides = input_283_strides_0, weight = model_23_cv3_0_0_1_conv_weight_to_fp16, x = input_281_cast_fp16)[name = tensor<string, []>("input_283_cast_fp16")];
            tensor<fp16, [1, 128, 80, 80]> input_285_cast_fp16 = silu(x = input_283_cast_fp16)[name = tensor<string, []>("input_285_cast_fp16")];
            tensor<string, []> input_287_pad_type_0 = const()[name = tensor<string, []>("input_287_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_287_pad_0 = const()[name = tensor<string, []>("input_287_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, []> input_287_groups_0 = const()[name = tensor<string, []>("input_287_groups_0"), val = tensor<int32, []>(128)];
            tensor<int32, [2]> input_287_strides_0 = const()[name = tensor<string, []>("input_287_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_287_dilations_0 = const()[name = tensor<string, []>("input_287_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [128, 1, 3, 3]> model_23_cv3_0_1_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_0_1_0_conv_weight_to_fp16"), val = tensor<fp16, [128, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18940928)))];
            tensor<fp16, [128]> model_23_cv3_0_1_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_0_1_0_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18943296)))];
            tensor<fp16, [1, 128, 80, 80]> input_287_cast_fp16 = conv(bias = model_23_cv3_0_1_0_conv_bias_to_fp16, dilations = input_287_dilations_0, groups = input_287_groups_0, pad = input_287_pad_0, pad_type = input_287_pad_type_0, strides = input_287_strides_0, weight = model_23_cv3_0_1_0_conv_weight_to_fp16, x = input_285_cast_fp16)[name = tensor<string, []>("input_287_cast_fp16")];
            tensor<fp16, [1, 128, 80, 80]> input_289_cast_fp16 = silu(x = input_287_cast_fp16)[name = tensor<string, []>("input_289_cast_fp16")];
            tensor<string, []> input_291_pad_type_0 = const()[name = tensor<string, []>("input_291_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_291_strides_0 = const()[name = tensor<string, []>("input_291_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_291_pad_0 = const()[name = tensor<string, []>("input_291_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_291_dilations_0 = const()[name = tensor<string, []>("input_291_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_291_groups_0 = const()[name = tensor<string, []>("input_291_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 128, 1, 1]> model_23_cv3_0_1_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_0_1_1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18943616)))];
            tensor<fp16, [128]> model_23_cv3_0_1_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_0_1_1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18976448)))];
            tensor<fp16, [1, 128, 80, 80]> input_291_cast_fp16 = conv(bias = model_23_cv3_0_1_1_conv_bias_to_fp16, dilations = input_291_dilations_0, groups = input_291_groups_0, pad = input_291_pad_0, pad_type = input_291_pad_type_0, strides = input_291_strides_0, weight = model_23_cv3_0_1_1_conv_weight_to_fp16, x = input_289_cast_fp16)[name = tensor<string, []>("input_291_cast_fp16")];
            tensor<fp16, [1, 128, 80, 80]> input_293_cast_fp16 = silu(x = input_291_cast_fp16)[name = tensor<string, []>("input_293_cast_fp16")];
            tensor<string, []> var_1127_pad_type_0 = const()[name = tensor<string, []>("op_1127_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1127_strides_0 = const()[name = tensor<string, []>("op_1127_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1127_pad_0 = const()[name = tensor<string, []>("op_1127_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1127_dilations_0 = const()[name = tensor<string, []>("op_1127_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1127_groups_0 = const()[name = tensor<string, []>("op_1127_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 128, 1, 1]> model_23_cv3_0_2_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_0_2_weight_to_fp16"), val = tensor<fp16, [1, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18976768)))];
            tensor<fp16, [1]> model_23_cv3_0_2_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_0_2_bias_to_fp16"), val = tensor<fp16, [1]>([-0x1.7d4p+2])];
            tensor<fp16, [1, 1, 80, 80]> var_1127_cast_fp16 = conv(bias = model_23_cv3_0_2_bias_to_fp16, dilations = var_1127_dilations_0, groups = var_1127_groups_0, pad = var_1127_pad_0, pad_type = var_1127_pad_type_0, strides = var_1127_strides_0, weight = model_23_cv3_0_2_weight_to_fp16, x = input_293_cast_fp16)[name = tensor<string, []>("op_1127_cast_fp16")];
            tensor<bool, []> xi_1_interleave_0 = const()[name = tensor<string, []>("xi_1_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 65, 80, 80]> xi_1_cast_fp16 = concat(axis = var_934, interleave = xi_1_interleave_0, values = (var_1077_cast_fp16, var_1127_cast_fp16))[name = tensor<string, []>("xi_1_cast_fp16")];
            tensor<string, []> input_295_pad_type_0 = const()[name = tensor<string, []>("input_295_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_295_pad_0 = const()[name = tensor<string, []>("input_295_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_295_strides_0 = const()[name = tensor<string, []>("input_295_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_295_dilations_0 = const()[name = tensor<string, []>("input_295_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_295_groups_0 = const()[name = tensor<string, []>("input_295_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 256, 3, 3]> model_23_cv2_1_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv2_1_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18977088)))];
            tensor<fp16, [64]> model_23_cv2_1_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv2_1_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19272064)))];
            tensor<fp16, [1, 64, 40, 40]> input_295_cast_fp16 = conv(bias = model_23_cv2_1_0_conv_bias_to_fp16, dilations = input_295_dilations_0, groups = input_295_groups_0, pad = input_295_pad_0, pad_type = input_295_pad_type_0, strides = input_295_strides_0, weight = model_23_cv2_1_0_conv_weight_to_fp16, x = input_207_cast_fp16)[name = tensor<string, []>("input_295_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> input_297_cast_fp16 = silu(x = input_295_cast_fp16)[name = tensor<string, []>("input_297_cast_fp16")];
            tensor<string, []> input_299_pad_type_0 = const()[name = tensor<string, []>("input_299_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_299_pad_0 = const()[name = tensor<string, []>("input_299_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_299_strides_0 = const()[name = tensor<string, []>("input_299_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_299_dilations_0 = const()[name = tensor<string, []>("input_299_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_299_groups_0 = const()[name = tensor<string, []>("input_299_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 3, 3]> model_23_cv2_1_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv2_1_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19272256)))];
            tensor<fp16, [64]> model_23_cv2_1_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv2_1_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19346048)))];
            tensor<fp16, [1, 64, 40, 40]> input_299_cast_fp16 = conv(bias = model_23_cv2_1_1_conv_bias_to_fp16, dilations = input_299_dilations_0, groups = input_299_groups_0, pad = input_299_pad_0, pad_type = input_299_pad_type_0, strides = input_299_strides_0, weight = model_23_cv2_1_1_conv_weight_to_fp16, x = input_297_cast_fp16)[name = tensor<string, []>("input_299_cast_fp16")];
            tensor<fp16, [1, 64, 40, 40]> input_301_cast_fp16 = silu(x = input_299_cast_fp16)[name = tensor<string, []>("input_301_cast_fp16")];
            tensor<string, []> var_1157_pad_type_0 = const()[name = tensor<string, []>("op_1157_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1157_strides_0 = const()[name = tensor<string, []>("op_1157_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1157_pad_0 = const()[name = tensor<string, []>("op_1157_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1157_dilations_0 = const()[name = tensor<string, []>("op_1157_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1157_groups_0 = const()[name = tensor<string, []>("op_1157_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 1, 1]> model_23_cv2_1_2_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv2_1_2_weight_to_fp16"), val = tensor<fp16, [64, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19346240)))];
            tensor<fp16, [64]> model_23_cv2_1_2_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv2_1_2_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19354496)))];
            tensor<fp16, [1, 64, 40, 40]> var_1157_cast_fp16 = conv(bias = model_23_cv2_1_2_bias_to_fp16, dilations = var_1157_dilations_0, groups = var_1157_groups_0, pad = var_1157_pad_0, pad_type = var_1157_pad_type_0, strides = var_1157_strides_0, weight = model_23_cv2_1_2_weight_to_fp16, x = input_301_cast_fp16)[name = tensor<string, []>("op_1157_cast_fp16")];
            tensor<string, []> input_303_pad_type_0 = const()[name = tensor<string, []>("input_303_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_303_pad_0 = const()[name = tensor<string, []>("input_303_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, []> input_303_groups_0 = const()[name = tensor<string, []>("input_303_groups_0"), val = tensor<int32, []>(256)];
            tensor<int32, [2]> input_303_strides_0 = const()[name = tensor<string, []>("input_303_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_303_dilations_0 = const()[name = tensor<string, []>("input_303_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [256, 1, 3, 3]> model_23_cv3_1_0_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_1_0_0_conv_weight_to_fp16"), val = tensor<fp16, [256, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19354688)))];
            tensor<fp16, [256]> model_23_cv3_1_0_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_1_0_0_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19359360)))];
            tensor<fp16, [1, 256, 40, 40]> input_303_cast_fp16 = conv(bias = model_23_cv3_1_0_0_conv_bias_to_fp16, dilations = input_303_dilations_0, groups = input_303_groups_0, pad = input_303_pad_0, pad_type = input_303_pad_type_0, strides = input_303_strides_0, weight = model_23_cv3_1_0_0_conv_weight_to_fp16, x = input_207_cast_fp16)[name = tensor<string, []>("input_303_cast_fp16")];
            tensor<fp16, [1, 256, 40, 40]> input_305_cast_fp16 = silu(x = input_303_cast_fp16)[name = tensor<string, []>("input_305_cast_fp16")];
            tensor<string, []> input_307_pad_type_0 = const()[name = tensor<string, []>("input_307_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_307_strides_0 = const()[name = tensor<string, []>("input_307_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_307_pad_0 = const()[name = tensor<string, []>("input_307_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_307_dilations_0 = const()[name = tensor<string, []>("input_307_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_307_groups_0 = const()[name = tensor<string, []>("input_307_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 256, 1, 1]> model_23_cv3_1_0_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_1_0_1_conv_weight_to_fp16"), val = tensor<fp16, [128, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19359936)))];
            tensor<fp16, [128]> model_23_cv3_1_0_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_1_0_1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19425536)))];
            tensor<fp16, [1, 128, 40, 40]> input_307_cast_fp16 = conv(bias = model_23_cv3_1_0_1_conv_bias_to_fp16, dilations = input_307_dilations_0, groups = input_307_groups_0, pad = input_307_pad_0, pad_type = input_307_pad_type_0, strides = input_307_strides_0, weight = model_23_cv3_1_0_1_conv_weight_to_fp16, x = input_305_cast_fp16)[name = tensor<string, []>("input_307_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> input_309_cast_fp16 = silu(x = input_307_cast_fp16)[name = tensor<string, []>("input_309_cast_fp16")];
            tensor<string, []> input_311_pad_type_0 = const()[name = tensor<string, []>("input_311_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_311_pad_0 = const()[name = tensor<string, []>("input_311_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, []> input_311_groups_0 = const()[name = tensor<string, []>("input_311_groups_0"), val = tensor<int32, []>(128)];
            tensor<int32, [2]> input_311_strides_0 = const()[name = tensor<string, []>("input_311_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_311_dilations_0 = const()[name = tensor<string, []>("input_311_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [128, 1, 3, 3]> model_23_cv3_1_1_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_1_1_0_conv_weight_to_fp16"), val = tensor<fp16, [128, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19425856)))];
            tensor<fp16, [128]> model_23_cv3_1_1_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_1_1_0_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19428224)))];
            tensor<fp16, [1, 128, 40, 40]> input_311_cast_fp16 = conv(bias = model_23_cv3_1_1_0_conv_bias_to_fp16, dilations = input_311_dilations_0, groups = input_311_groups_0, pad = input_311_pad_0, pad_type = input_311_pad_type_0, strides = input_311_strides_0, weight = model_23_cv3_1_1_0_conv_weight_to_fp16, x = input_309_cast_fp16)[name = tensor<string, []>("input_311_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> input_313_cast_fp16 = silu(x = input_311_cast_fp16)[name = tensor<string, []>("input_313_cast_fp16")];
            tensor<string, []> input_315_pad_type_0 = const()[name = tensor<string, []>("input_315_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_315_strides_0 = const()[name = tensor<string, []>("input_315_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_315_pad_0 = const()[name = tensor<string, []>("input_315_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_315_dilations_0 = const()[name = tensor<string, []>("input_315_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_315_groups_0 = const()[name = tensor<string, []>("input_315_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 128, 1, 1]> model_23_cv3_1_1_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_1_1_1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19428544)))];
            tensor<fp16, [128]> model_23_cv3_1_1_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_1_1_1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19461376)))];
            tensor<fp16, [1, 128, 40, 40]> input_315_cast_fp16 = conv(bias = model_23_cv3_1_1_1_conv_bias_to_fp16, dilations = input_315_dilations_0, groups = input_315_groups_0, pad = input_315_pad_0, pad_type = input_315_pad_type_0, strides = input_315_strides_0, weight = model_23_cv3_1_1_1_conv_weight_to_fp16, x = input_313_cast_fp16)[name = tensor<string, []>("input_315_cast_fp16")];
            tensor<fp16, [1, 128, 40, 40]> input_317_cast_fp16 = silu(x = input_315_cast_fp16)[name = tensor<string, []>("input_317_cast_fp16")];
            tensor<string, []> var_1207_pad_type_0 = const()[name = tensor<string, []>("op_1207_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1207_strides_0 = const()[name = tensor<string, []>("op_1207_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1207_pad_0 = const()[name = tensor<string, []>("op_1207_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1207_dilations_0 = const()[name = tensor<string, []>("op_1207_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1207_groups_0 = const()[name = tensor<string, []>("op_1207_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 128, 1, 1]> model_23_cv3_1_2_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_1_2_weight_to_fp16"), val = tensor<fp16, [1, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19461696)))];
            tensor<fp16, [1]> model_23_cv3_1_2_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_1_2_bias_to_fp16"), val = tensor<fp16, [1]>([-0x1.884p+1])];
            tensor<fp16, [1, 1, 40, 40]> var_1207_cast_fp16 = conv(bias = model_23_cv3_1_2_bias_to_fp16, dilations = var_1207_dilations_0, groups = var_1207_groups_0, pad = var_1207_pad_0, pad_type = var_1207_pad_type_0, strides = var_1207_strides_0, weight = model_23_cv3_1_2_weight_to_fp16, x = input_317_cast_fp16)[name = tensor<string, []>("op_1207_cast_fp16")];
            tensor<bool, []> xi_3_interleave_0 = const()[name = tensor<string, []>("xi_3_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 65, 40, 40]> xi_3_cast_fp16 = concat(axis = var_934, interleave = xi_3_interleave_0, values = (var_1157_cast_fp16, var_1207_cast_fp16))[name = tensor<string, []>("xi_3_cast_fp16")];
            tensor<string, []> input_319_pad_type_0 = const()[name = tensor<string, []>("input_319_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_319_pad_0 = const()[name = tensor<string, []>("input_319_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_319_strides_0 = const()[name = tensor<string, []>("input_319_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_319_dilations_0 = const()[name = tensor<string, []>("input_319_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_319_groups_0 = const()[name = tensor<string, []>("input_319_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 512, 3, 3]> model_23_cv2_2_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv2_2_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19462016)))];
            tensor<fp16, [64]> model_23_cv2_2_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv2_2_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20051904)))];
            tensor<fp16, [1, 64, 20, 20]> input_319_cast_fp16 = conv(bias = model_23_cv2_2_0_conv_bias_to_fp16, dilations = input_319_dilations_0, groups = input_319_groups_0, pad = input_319_pad_0, pad_type = input_319_pad_type_0, strides = input_319_strides_0, weight = model_23_cv2_2_0_conv_weight_to_fp16, x = input_261_cast_fp16)[name = tensor<string, []>("input_319_cast_fp16")];
            tensor<fp16, [1, 64, 20, 20]> input_321_cast_fp16 = silu(x = input_319_cast_fp16)[name = tensor<string, []>("input_321_cast_fp16")];
            tensor<string, []> input_323_pad_type_0 = const()[name = tensor<string, []>("input_323_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_323_pad_0 = const()[name = tensor<string, []>("input_323_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_323_strides_0 = const()[name = tensor<string, []>("input_323_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_323_dilations_0 = const()[name = tensor<string, []>("input_323_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_323_groups_0 = const()[name = tensor<string, []>("input_323_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 3, 3]> model_23_cv2_2_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv2_2_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20052096)))];
            tensor<fp16, [64]> model_23_cv2_2_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv2_2_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20125888)))];
            tensor<fp16, [1, 64, 20, 20]> input_323_cast_fp16 = conv(bias = model_23_cv2_2_1_conv_bias_to_fp16, dilations = input_323_dilations_0, groups = input_323_groups_0, pad = input_323_pad_0, pad_type = input_323_pad_type_0, strides = input_323_strides_0, weight = model_23_cv2_2_1_conv_weight_to_fp16, x = input_321_cast_fp16)[name = tensor<string, []>("input_323_cast_fp16")];
            tensor<fp16, [1, 64, 20, 20]> input_325_cast_fp16 = silu(x = input_323_cast_fp16)[name = tensor<string, []>("input_325_cast_fp16")];
            tensor<string, []> var_1237_pad_type_0 = const()[name = tensor<string, []>("op_1237_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1237_strides_0 = const()[name = tensor<string, []>("op_1237_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1237_pad_0 = const()[name = tensor<string, []>("op_1237_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1237_dilations_0 = const()[name = tensor<string, []>("op_1237_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1237_groups_0 = const()[name = tensor<string, []>("op_1237_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 1, 1]> model_23_cv2_2_2_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv2_2_2_weight_to_fp16"), val = tensor<fp16, [64, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20126080)))];
            tensor<fp16, [64]> model_23_cv2_2_2_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv2_2_2_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20134336)))];
            tensor<fp16, [1, 64, 20, 20]> var_1237_cast_fp16 = conv(bias = model_23_cv2_2_2_bias_to_fp16, dilations = var_1237_dilations_0, groups = var_1237_groups_0, pad = var_1237_pad_0, pad_type = var_1237_pad_type_0, strides = var_1237_strides_0, weight = model_23_cv2_2_2_weight_to_fp16, x = input_325_cast_fp16)[name = tensor<string, []>("op_1237_cast_fp16")];
            tensor<string, []> input_327_pad_type_0 = const()[name = tensor<string, []>("input_327_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_327_pad_0 = const()[name = tensor<string, []>("input_327_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, []> input_327_groups_0 = const()[name = tensor<string, []>("input_327_groups_0"), val = tensor<int32, []>(512)];
            tensor<int32, [2]> input_327_strides_0 = const()[name = tensor<string, []>("input_327_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_327_dilations_0 = const()[name = tensor<string, []>("input_327_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [512, 1, 3, 3]> model_23_cv3_2_0_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_2_0_0_conv_weight_to_fp16"), val = tensor<fp16, [512, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20134528)))];
            tensor<fp16, [512]> model_23_cv3_2_0_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_2_0_0_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20143808)))];
            tensor<fp16, [1, 512, 20, 20]> input_327_cast_fp16 = conv(bias = model_23_cv3_2_0_0_conv_bias_to_fp16, dilations = input_327_dilations_0, groups = input_327_groups_0, pad = input_327_pad_0, pad_type = input_327_pad_type_0, strides = input_327_strides_0, weight = model_23_cv3_2_0_0_conv_weight_to_fp16, x = input_261_cast_fp16)[name = tensor<string, []>("input_327_cast_fp16")];
            tensor<fp16, [1, 512, 20, 20]> input_329_cast_fp16 = silu(x = input_327_cast_fp16)[name = tensor<string, []>("input_329_cast_fp16")];
            tensor<string, []> input_331_pad_type_0 = const()[name = tensor<string, []>("input_331_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_331_strides_0 = const()[name = tensor<string, []>("input_331_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_331_pad_0 = const()[name = tensor<string, []>("input_331_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_331_dilations_0 = const()[name = tensor<string, []>("input_331_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_331_groups_0 = const()[name = tensor<string, []>("input_331_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 512, 1, 1]> model_23_cv3_2_0_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_2_0_1_conv_weight_to_fp16"), val = tensor<fp16, [128, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20144896)))];
            tensor<fp16, [128]> model_23_cv3_2_0_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_2_0_1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20276032)))];
            tensor<fp16, [1, 128, 20, 20]> input_331_cast_fp16 = conv(bias = model_23_cv3_2_0_1_conv_bias_to_fp16, dilations = input_331_dilations_0, groups = input_331_groups_0, pad = input_331_pad_0, pad_type = input_331_pad_type_0, strides = input_331_strides_0, weight = model_23_cv3_2_0_1_conv_weight_to_fp16, x = input_329_cast_fp16)[name = tensor<string, []>("input_331_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> input_333_cast_fp16 = silu(x = input_331_cast_fp16)[name = tensor<string, []>("input_333_cast_fp16")];
            tensor<string, []> input_335_pad_type_0 = const()[name = tensor<string, []>("input_335_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_335_pad_0 = const()[name = tensor<string, []>("input_335_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, []> input_335_groups_0 = const()[name = tensor<string, []>("input_335_groups_0"), val = tensor<int32, []>(128)];
            tensor<int32, [2]> input_335_strides_0 = const()[name = tensor<string, []>("input_335_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_335_dilations_0 = const()[name = tensor<string, []>("input_335_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [128, 1, 3, 3]> model_23_cv3_2_1_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_2_1_0_conv_weight_to_fp16"), val = tensor<fp16, [128, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20276352)))];
            tensor<fp16, [128]> model_23_cv3_2_1_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_2_1_0_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20278720)))];
            tensor<fp16, [1, 128, 20, 20]> input_335_cast_fp16 = conv(bias = model_23_cv3_2_1_0_conv_bias_to_fp16, dilations = input_335_dilations_0, groups = input_335_groups_0, pad = input_335_pad_0, pad_type = input_335_pad_type_0, strides = input_335_strides_0, weight = model_23_cv3_2_1_0_conv_weight_to_fp16, x = input_333_cast_fp16)[name = tensor<string, []>("input_335_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> input_337_cast_fp16 = silu(x = input_335_cast_fp16)[name = tensor<string, []>("input_337_cast_fp16")];
            tensor<string, []> input_339_pad_type_0 = const()[name = tensor<string, []>("input_339_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_339_strides_0 = const()[name = tensor<string, []>("input_339_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_339_pad_0 = const()[name = tensor<string, []>("input_339_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_339_dilations_0 = const()[name = tensor<string, []>("input_339_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_339_groups_0 = const()[name = tensor<string, []>("input_339_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 128, 1, 1]> model_23_cv3_2_1_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_2_1_1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20279040)))];
            tensor<fp16, [128]> model_23_cv3_2_1_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_2_1_1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20311872)))];
            tensor<fp16, [1, 128, 20, 20]> input_339_cast_fp16 = conv(bias = model_23_cv3_2_1_1_conv_bias_to_fp16, dilations = input_339_dilations_0, groups = input_339_groups_0, pad = input_339_pad_0, pad_type = input_339_pad_type_0, strides = input_339_strides_0, weight = model_23_cv3_2_1_1_conv_weight_to_fp16, x = input_337_cast_fp16)[name = tensor<string, []>("input_339_cast_fp16")];
            tensor<fp16, [1, 128, 20, 20]> input_341_cast_fp16 = silu(x = input_339_cast_fp16)[name = tensor<string, []>("input_341_cast_fp16")];
            tensor<string, []> var_1287_pad_type_0 = const()[name = tensor<string, []>("op_1287_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1287_strides_0 = const()[name = tensor<string, []>("op_1287_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1287_pad_0 = const()[name = tensor<string, []>("op_1287_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1287_dilations_0 = const()[name = tensor<string, []>("op_1287_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1287_groups_0 = const()[name = tensor<string, []>("op_1287_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 128, 1, 1]> model_23_cv3_2_2_weight_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_2_2_weight_to_fp16"), val = tensor<fp16, [1, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20312192)))];
            tensor<fp16, [1]> model_23_cv3_2_2_bias_to_fp16 = const()[name = tensor<string, []>("model_23_cv3_2_2_bias_to_fp16"), val = tensor<fp16, [1]>([-0x1.e28p+0])];
            tensor<fp16, [1, 1, 20, 20]> var_1287_cast_fp16 = conv(bias = model_23_cv3_2_2_bias_to_fp16, dilations = var_1287_dilations_0, groups = var_1287_groups_0, pad = var_1287_pad_0, pad_type = var_1287_pad_type_0, strides = var_1287_strides_0, weight = model_23_cv3_2_2_weight_to_fp16, x = input_341_cast_fp16)[name = tensor<string, []>("op_1287_cast_fp16")];
            tensor<bool, []> xi_interleave_0 = const()[name = tensor<string, []>("xi_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 65, 20, 20]> xi_cast_fp16 = concat(axis = var_934, interleave = xi_interleave_0, values = (var_1237_cast_fp16, var_1287_cast_fp16))[name = tensor<string, []>("xi_cast_fp16")];
            tensor<int32, [3]> var_1291 = const()[name = tensor<string, []>("op_1291"), val = tensor<int32, [3]>([1, 65, -1])];
            tensor<fp16, [1, 65, 6400]> var_1292_cast_fp16 = reshape(shape = var_1291, x = xi_1_cast_fp16)[name = tensor<string, []>("op_1292_cast_fp16")];
            tensor<int32, [3]> var_1293 = const()[name = tensor<string, []>("op_1293"), val = tensor<int32, [3]>([1, 65, -1])];
            tensor<fp16, [1, 65, 1600]> var_1294_cast_fp16 = reshape(shape = var_1293, x = xi_3_cast_fp16)[name = tensor<string, []>("op_1294_cast_fp16")];
            tensor<int32, [3]> var_1295 = const()[name = tensor<string, []>("op_1295"), val = tensor<int32, [3]>([1, 65, -1])];
            tensor<fp16, [1, 65, 400]> var_1296_cast_fp16 = reshape(shape = var_1295, x = xi_cast_fp16)[name = tensor<string, []>("op_1296_cast_fp16")];
            tensor<bool, []> var_1298_interleave_0 = const()[name = tensor<string, []>("op_1298_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 65, 8400]> var_1298_cast_fp16 = concat(axis = var_927, interleave = var_1298_interleave_0, values = (var_1292_cast_fp16, var_1294_cast_fp16, var_1296_cast_fp16))[name = tensor<string, []>("op_1298_cast_fp16")];
            tensor<int32, [2]> var_1299 = const()[name = tensor<string, []>("op_1299"), val = tensor<int32, [2]>([64, 1])];
            tensor<int32, []> var_1300_axis_0 = const()[name = tensor<string, []>("op_1300_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 8400]> var_1300_cast_fp16_0, tensor<fp16, [1, 1, 8400]> var_1300_cast_fp16_1 = split(axis = var_1300_axis_0, split_sizes = var_1299, x = var_1298_cast_fp16)[name = tensor<string, []>("op_1300_cast_fp16")];
            tensor<int32, [4]> var_1306 = const()[name = tensor<string, []>("op_1306"), val = tensor<int32, [4]>([1, 4, 16, 8400])];
            tensor<fp16, [1, 4, 16, 8400]> var_1307_cast_fp16 = reshape(shape = var_1306, x = var_1300_cast_fp16_0)[name = tensor<string, []>("op_1307_cast_fp16")];
            tensor<int32, [4]> var_1308_perm_0 = const()[name = tensor<string, []>("op_1308_perm_0"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<fp16, [1, 16, 4, 8400]> var_1308_cast_fp16 = transpose(perm = var_1308_perm_0, x = var_1307_cast_fp16)[name = tensor<string, []>("transpose_0")];
            tensor<fp16, [1, 16, 4, 8400]> input_cast_fp16 = softmax(axis = var_934, x = var_1308_cast_fp16)[name = tensor<string, []>("input_cast_fp16")];
            tensor<string, []> var_1315_pad_type_0 = const()[name = tensor<string, []>("op_1315_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> var_1315_strides_0 = const()[name = tensor<string, []>("op_1315_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> var_1315_pad_0 = const()[name = tensor<string, []>("op_1315_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> var_1315_dilations_0 = const()[name = tensor<string, []>("op_1315_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1315_groups_0 = const()[name = tensor<string, []>("op_1315_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 16, 1, 1]> model_23_dfl_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_23_dfl_conv_weight_to_fp16"), val = tensor<fp16, [1, 16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20312512)))];
            tensor<fp16, [1, 1, 4, 8400]> var_1315_cast_fp16 = conv(dilations = var_1315_dilations_0, groups = var_1315_groups_0, pad = var_1315_pad_0, pad_type = var_1315_pad_type_0, strides = var_1315_strides_0, weight = model_23_dfl_conv_weight_to_fp16, x = input_cast_fp16)[name = tensor<string, []>("op_1315_cast_fp16")];
            tensor<int32, [3]> var_1316 = const()[name = tensor<string, []>("op_1316"), val = tensor<int32, [3]>([1, 4, 8400])];
            tensor<fp16, [1, 4, 8400]> distance_cast_fp16 = reshape(shape = var_1316, x = var_1315_cast_fp16)[name = tensor<string, []>("distance_cast_fp16")];
            tensor<int32, [2]> var_1319_split_sizes_0 = const()[name = tensor<string, []>("op_1319_split_sizes_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, []> var_1319_axis_0 = const()[name = tensor<string, []>("op_1319_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 2, 8400]> var_1319_cast_fp16_0, tensor<fp16, [1, 2, 8400]> var_1319_cast_fp16_1 = split(axis = var_1319_axis_0, split_sizes = var_1319_split_sizes_0, x = distance_cast_fp16)[name = tensor<string, []>("op_1319_cast_fp16")];
            tensor<fp16, [1, 2, 8400]> anchor_points_to_fp16 = const()[name = tensor<string, []>("anchor_points_to_fp16"), val = tensor<fp16, [1, 2, 8400]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20312640)))];
            tensor<fp16, [1, 2, 8400]> x1y1_cast_fp16 = sub(x = anchor_points_to_fp16, y = var_1319_cast_fp16_0)[name = tensor<string, []>("x1y1_cast_fp16")];
            tensor<fp16, [1, 2, 8400]> x2y2_cast_fp16 = add(x = anchor_points_to_fp16, y = var_1319_cast_fp16_1)[name = tensor<string, []>("x2y2_cast_fp16")];
            tensor<fp16, [1, 2, 8400]> var_1323_cast_fp16 = add(x = x1y1_cast_fp16, y = x2y2_cast_fp16)[name = tensor<string, []>("op_1323_cast_fp16")];
            tensor<fp16, []> _inversed_c_xy_y_0_to_fp16 = const()[name = tensor<string, []>("_inversed_c_xy_y_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 2, 8400]> _inversed_c_xy_cast_fp16 = mul(x = var_1323_cast_fp16, y = _inversed_c_xy_y_0_to_fp16)[name = tensor<string, []>("_inversed_c_xy_cast_fp16")];
            tensor<fp16, [1, 2, 8400]> wh_cast_fp16 = sub(x = x2y2_cast_fp16, y = x1y1_cast_fp16)[name = tensor<string, []>("wh_cast_fp16")];
            tensor<bool, []> var_1328_interleave_0 = const()[name = tensor<string, []>("op_1328_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 4, 8400]> var_1328_cast_fp16 = concat(axis = var_934, interleave = var_1328_interleave_0, values = (_inversed_c_xy_cast_fp16, wh_cast_fp16))[name = tensor<string, []>("op_1328_cast_fp16")];
            tensor<fp16, [1, 8400]> var_921_to_fp16 = const()[name = tensor<string, []>("op_921_to_fp16"), val = tensor<fp16, [1, 8400]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20346304)))];
            tensor<fp16, [1, 4, 8400]> dbox_cast_fp16 = mul(x = var_1328_cast_fp16, y = var_921_to_fp16)[name = tensor<string, []>("dbox_cast_fp16")];
            tensor<fp16, [1, 1, 8400]> var_1330_cast_fp16 = sigmoid(x = var_1300_cast_fp16_1)[name = tensor<string, []>("op_1330_cast_fp16")];
            tensor<int32, [4]> var_1331 = const()[name = tensor<string, []>("op_1331"), val = tensor<int32, [4]>([1, 24, 3, -1])];
            tensor<fp16, [1, 24, 3, 8400]> y_cast_fp16 = reshape(shape = var_1331, x = kpts_cast_fp16)[name = tensor<string, []>("y_cast_fp16")];
            tensor<int32, [4]> var_1335_begin_0 = const()[name = tensor<string, []>("op_1335_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1335_end_0 = const()[name = tensor<string, []>("op_1335_end_0"), val = tensor<int32, [4]>([1, 24, 2, 8400])];
            tensor<bool, [4]> var_1335_end_mask_0 = const()[name = tensor<string, []>("op_1335_end_mask_0"), val = tensor<bool, [4]>([true, true, false, true])];
            tensor<fp16, [1, 24, 2, 8400]> var_1335_cast_fp16 = slice_by_index(begin = var_1335_begin_0, end = var_1335_end_0, end_mask = var_1335_end_mask_0, x = y_cast_fp16)[name = tensor<string, []>("op_1335_cast_fp16")];
            tensor<fp16, []> var_1336_to_fp16 = const()[name = tensor<string, []>("op_1336_to_fp16"), val = tensor<fp16, []>(0x1p+1)];
            tensor<fp16, [1, 24, 2, 8400]> var_1337_cast_fp16 = mul(x = var_1335_cast_fp16, y = var_1336_to_fp16)[name = tensor<string, []>("op_1337_cast_fp16")];
            tensor<fp16, [2, 8400]> var_1339_to_fp16 = const()[name = tensor<string, []>("op_1339_to_fp16"), val = tensor<fp16, [2, 8400]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20363200)))];
            tensor<fp16, [1, 24, 2, 8400]> var_1340_cast_fp16 = add(x = var_1337_cast_fp16, y = var_1339_to_fp16)[name = tensor<string, []>("op_1340_cast_fp16")];
            tensor<fp16, [1, 24, 2, 8400]> a_5_cast_fp16 = mul(x = var_1340_cast_fp16, y = var_921_to_fp16)[name = tensor<string, []>("a_5_cast_fp16")];
            tensor<int32, [4]> var_1344_begin_0 = const()[name = tensor<string, []>("op_1344_begin_0"), val = tensor<int32, [4]>([0, 0, 2, 0])];
            tensor<int32, [4]> var_1344_end_0 = const()[name = tensor<string, []>("op_1344_end_0"), val = tensor<int32, [4]>([1, 24, 1, 8400])];
            tensor<bool, [4]> var_1344_end_mask_0 = const()[name = tensor<string, []>("op_1344_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 24, 1, 8400]> var_1344_cast_fp16 = slice_by_index(begin = var_1344_begin_0, end = var_1344_end_0, end_mask = var_1344_end_mask_0, x = y_cast_fp16)[name = tensor<string, []>("op_1344_cast_fp16")];
            tensor<fp16, [1, 24, 1, 8400]> var_1345_cast_fp16 = sigmoid(x = var_1344_cast_fp16)[name = tensor<string, []>("op_1345_cast_fp16")];
            tensor<bool, []> a_interleave_0 = const()[name = tensor<string, []>("a_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 24, 3, 8400]> a_cast_fp16 = concat(axis = var_927, interleave = a_interleave_0, values = (a_5_cast_fp16, var_1345_cast_fp16))[name = tensor<string, []>("a_cast_fp16")];
            tensor<int32, [3]> var_1348 = const()[name = tensor<string, []>("op_1348"), val = tensor<int32, [3]>([1, 72, -1])];
            tensor<fp16, [1, 72, 8400]> pred_kpt_cast_fp16 = reshape(shape = var_1348, x = a_cast_fp16)[name = tensor<string, []>("pred_kpt_cast_fp16")];
            tensor<bool, []> var_1351_interleave_0 = const()[name = tensor<string, []>("op_1351_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 77, 8400]> var_1351_cast_fp16 = concat(axis = var_934, interleave = var_1351_interleave_0, values = (dbox_cast_fp16, var_1330_cast_fp16, pred_kpt_cast_fp16))[name = tensor<string, []>("op_1351_cast_fp16")];
            tensor<string, []> var_1351_cast_fp16_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_1351_cast_fp16_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp32, [1, 77, 8400]> var_1351 = cast(dtype = var_1351_cast_fp16_to_fp32_dtype_0, x = var_1351_cast_fp16)[name = tensor<string, []>("cast_15")];
        } -> (var_1351);
}